[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js":"19","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js":"20","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js":"21","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js":"22","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Notes.js":"23","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NoteCard.js":"24","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NewNoteForm.js":"25","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/EditNoteForm.js":"26","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Search.js":"27","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/SearchTermSet.js":"28","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/ResultCard.js":"29","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/NoteShow.js":"30"},{"size":541,"mtime":1612363761833,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1612300184997,"results":"33","hashOfConfig":"32"},{"size":4030,"mtime":1615084079932,"results":"34","hashOfConfig":"32"},{"size":3713,"mtime":1614799846546,"results":"35","hashOfConfig":"32"},{"size":10300,"mtime":1613576593209,"results":"36","hashOfConfig":"32"},{"size":780,"mtime":1613498806379,"results":"37","hashOfConfig":"32"},{"size":1129,"mtime":1613576470684,"results":"38","hashOfConfig":"32"},{"size":4329,"mtime":1613505042214,"results":"39","hashOfConfig":"32"},{"size":1922,"mtime":1613576926857,"results":"40","hashOfConfig":"32"},{"size":1709,"mtime":1613097902562,"results":"41","hashOfConfig":"32"},{"size":2984,"mtime":1614800336649,"results":"42","hashOfConfig":"32"},{"size":1624,"mtime":1613093991934,"results":"43","hashOfConfig":"32"},{"size":5421,"mtime":1613611996268,"results":"44","hashOfConfig":"32"},{"size":12288,"mtime":1615084743105,"results":"45","hashOfConfig":"32"},{"size":413,"mtime":1612467783688,"results":"46","hashOfConfig":"32"},{"size":2893,"mtime":1613531580584,"results":"47","hashOfConfig":"32"},{"size":1026,"mtime":1614792306741,"results":"48","hashOfConfig":"32"},{"size":865,"mtime":1613076959700,"results":"49","hashOfConfig":"32"},{"size":1001,"mtime":1613616462297,"results":"50","hashOfConfig":"32"},{"size":4171,"mtime":1613613010293,"results":"51","hashOfConfig":"32"},{"size":1943,"mtime":1613092983584,"results":"52","hashOfConfig":"32"},{"size":633,"mtime":1613350832595,"results":"53","hashOfConfig":"32"},{"size":3153,"mtime":1613507870322,"results":"54","hashOfConfig":"32"},{"size":1259,"mtime":1613581542181,"results":"55","hashOfConfig":"32"},{"size":4398,"mtime":1613574244723,"results":"56","hashOfConfig":"32"},{"size":1953,"mtime":1613576790887,"results":"57","hashOfConfig":"32"},{"size":5537,"mtime":1613598628670,"results":"58","hashOfConfig":"32"},{"size":444,"mtime":1613526601717,"results":"59","hashOfConfig":"32"},{"size":2425,"mtime":1613529983971,"results":"60","hashOfConfig":"32"},{"size":2457,"mtime":1613525734563,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"pp5roh",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"64"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"64"},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["144","145"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",["146"],"// import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"./pages/Calendar\";\nimport Day from \"./pages/Day\"\nimport User from \"./pages/User\"\nimport SignUp from \"./pages/SignUp\"\nimport Home from \"./pages/Home\"\nimport LoginPage from \"./pages/LoginPage\"\nimport Notes from \"./pages/Notes\"\nimport NoteShow from \"./pages/NoteShow\"\nimport Search from \"./pages/Search\"\nimport NavBar from \"./navBar/NavBar\"\n\n//import API from \"./adapters/API\"\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport './css/home.css';\n\n\n\nfunction App() {  \n\n  const [user, setUser] = useState(null)\n  const [month, setMonth] = useState(0)\n  const [loaded, setLoaded] = useState(false)\n  //const [redirect, setRedirect] = useState(false)\n  // const [searchTerm, setSearchTerm] = useState(\"\")\n\n  // useEffect(() => { \n  //   fetch(`http://localhost:3000/autologin`)\n  //   .then(resp => resp.json())\n  //   .then(data => {\n  //     setUser(data)\n  //     setLoaded(true)\n  //     //setNavBarSearch(\"\")\n  //   })\n  // }, [])\n\n  // function componentDidMount(){\n  //   document.title = 'test';\n  // }\n  \n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(\"http://localhost:3000/profile\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((r) => r.json())\n        .then((user) => {setUser(user)\n          setLoaded(true)\n          console.log(user)}\n          );\n    }\n    \n  }, []);\n\n  // console.log(user)\n\n  if (user === null) {\n    return (\n      <div className=\"background-nologin\">\n        {/* <NavBar user={user} setUser={setUser} />\n    \n        <Switch>\n        <Route exact path=\"/login\">\n          <LoginPage setUser={setUser} user={User}/>\n        </Route>\n\n        <Route path=\"/\">\n            <Home  user={user} />\n        </Route>\n        </Switch> */}\n      <NavBar user={user} setUser={setUser} />\n\n      <Switch>\n        <Route exact path=\"/login\">\n          <LoginPage setUser={setUser} user={User}/>\n        </Route>\n\n        <Route exact path=\"/signup\">\n            <SignUp setUser={setUser} user={user}/>\n        </Route>\n\n        <Route path=\"/\">\n            <Home  user={user} />\n        </Route>\n\n\n\n      </Switch>\n\n      <div class=\"wrapper\">\n                    <div id=\"stars\"></div>\n                    <div id=\"stars2\"></div>\n                     {/* <div id=\"stars3\"></div>   */}\n      </div>\n\n      </div>\n    )\n      \n  } else {\n    return (\n      <div className=\"background\">\n      <NavBar user={user} setUser={setUser} \n      // redirect={redirect} setRedirect={setRedirect} \n      // setSearchTerm={setSearchTerm}\n      //navBarSearch={navBarSearch} setNavBarSearch={setNavBarSearch}\n      />\n\n      \n\n      <Switch>\n\n        <Route exact path=\"/days/:id\">\n            <Day user={user} setUser={setUser}/>\n        </Route>\n\n        <Route exact path=\"/users/:id\">\n            <User user={user} setUser={setUser}/>\n        </Route>\n\n\n\n        <Route exact path=\"/calendar\">\n            <Calendar  month={month} setMonth={setMonth} user={user} setUser={setUser}/>\n        </Route>\n\n        {/* <Route exact path=\"/login\">\n          <LoginPage setUser={setUser} user={User}/>\n        </Route> */}\n\n        <Route exact path=\"/notes/:id\">\n          <NoteShow user={user} setUser={setUser} />\n        </Route>\n\n        <Route exact path=\"/notes\">\n          <Notes user={user} setUser={setUser}/>\n        </Route>\n\n        <Route exact path=\"/search\">\n          <Search user={user}\n          />\n        </Route>\n        \n        <Route exact path=\"/login\">\n          <LoginPage setUser={setUser} user={User}/>\n        </Route>\n\n        <Route exact path=\"/signup\">\n            <SignUp setUser={setUser}/>\n        </Route>\n\n        <Route path=\"/\">\n            <Home  user={user}  title=\"test\"/>\n        </Route>\n\n      </Switch>\n      \n\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["147","148","149"],"//import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CalendarMaker from \"./CalendarRenders/CalendarMaker\"\nimport StickerApplyBox from \"./CalendarRenders/StickerApplyBox\"\n\nimport '../App.css'\nimport { useState } from \"react\";\n\n\nfunction Calendar({ month, setMonth, user, setUser}){\n\n    const [stickerMode, setStickerMode] = useState(false)\n    const [stickerSelected, setStickerSelected] = useState(null)\n    const [days, setDays ] =useState(user.days)\n    //console.log(user.days , \"userdays\")\n    //console.log(stickerSelected)\n\n    const sliceMonthStart=[0,31,59,90,120,151,181,212,243,273,304,334]\n    const sliceMonthEnd =[31,59,90,120,151,181,212,243,273,304,334,365]\n\n    //const [days, setDays] = useState([user.days])\n\n    const daysOrdered = days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n    \n    const daysSliced = daysOrdered.slice(sliceMonthStart[month], sliceMonthEnd[month])\n\n    function updateDaysForAddStickers(daysArray,newDayStickerJoiner, newDaySticker ){\n        const updatedDays = []\n\n        let dayID = newDaySticker.day.id\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayID) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers.push(newDaySticker.sticker)\n                updatedDay.day_stickers.push(newDayStickerJoiner)\n                console.log(updatedDay)\n                \n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n\n\n    function handleNewDaySticker(newDaySticker){\n\n        const newDayStickerJoiner = {\n            id: newDaySticker.id,\n            day_id: newDaySticker.day.id,\n            sticker_id: newDaySticker.sticker.id,\n        }\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, newDayStickerJoiner, newDaySticker)\n        setDays(updatedDays)\n        updatedUser.days = updatedDays\n        \n        setUser(updatedUser)\n\n    }\n\n    const months =[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\", \n    ]\n\n    //console.log(month)\n\n    function handleNextMonth(){\n        if(month === 11){\n            setMonth(0)\n        } else{\n        setMonth(month+1)\n        }\n    }\n    function handelPrevMonth(){\n        if (month === 0){\n            setMonth(11)\n        } else {\n        setMonth(month-1)\n        }\n    }\n\n    return(\n        \n        <div className=\"grid-container\">\n\n            <div className=\"Month-Name\">\n                <button className=\"cal-buttons\" onClick={handelPrevMonth}>  Prev </button>\n                \n                    <a>{months[month]}</a>\n                \n                <button className=\"cal-buttons\" onClick={handleNextMonth}> Next </button>\n            </div>\n\n            <div className=\"Calendar\">\n            <CalendarMaker daysSliced={daysSliced} \n            month={month} stickerMode={stickerMode}\n            stickerSelected={stickerSelected}\n            handleNewDaySticker={handleNewDaySticker}\n            />\n            </div>\n\n            <div className=\"Edit-Box\">\n            <StickerApplyBox user={user} \n            stickerMode ={stickerMode} \n            setStickerMode={setStickerMode}\n            setStickerSelected={setStickerSelected}\n            />\n            \n            </div>\n            <div><br/></div>\n            <br/> <br/> <br/>\n        </div>\n        \n    )\n}\n\nexport default Calendar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["150","151","152"],"import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DayStickerRender from \"./dayRenders/DayStickerRender\";\nimport NewPostForm from \"./dayRenders/NewPostForm\";\nimport NewDayStickerForm from \"./dayRenders/NewDayStickerForm\";\nimport PostRender from \"./dayRenders/PostRender\";\n\nimport '../css/Day.css';\n\nfunction Day({user, setUser}){\n\n    const params =useParams();\n\n    const [day, setDay] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [stickers, setStickers] = useState([]);\n    const [dayStickers, setDayStickers] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    function search(dayId, daysArray){\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayId) {\n                return daysArray[i];\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        const resultObject = search(Number(params.id), user.days)\n        //console.log(resultObject)\n        setDay(resultObject);\n        setPosts(resultObject.posts)\n        setStickers(resultObject.stickers)\n        setDayStickers(resultObject.day_stickers)\n        setIsLoaded(true);\n\n    },[params.id])\n\n\n    //This step might be inefficient, probaly better to pull the daysOrdered from App.js  \n    const daysOrdered = user.days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n\n\n    //These steps here are needed tho.... remeber index starts at 0 but % messes up the logic a bit \n    const currentIndex = daysOrdered.indexOf(day);\n    const nextIndex = ((currentIndex + 1) % daysOrdered.length);\n    const nextDay = daysOrdered[nextIndex]\n    //console.log(nextDay.id, \"wut\")\n\n    let prevIndex = 10 \n    if(currentIndex === 0){\n        prevIndex = daysOrdered.length -1\n    } else {\n        prevIndex = (currentIndex - 1) % (daysOrdered.length )\n     } \n    //console.log(currentIndex, prevIndex) \n    const prevDay = daysOrdered[prevIndex]\n    //console.log(prevDay.id, \"tuw\")\n    \n    \n    //The days update helper functions (there should be 4!)\n\n    function updateDaysForNewPost(dayId, daysArray, updatedPost){\n        const updatedDays = []\n        //console.log (daysArray, \"function array check \")\n        //console.log(dayId)\n\n        for (let i=0; i < daysArray.length; i++) {\n            //console.log(daysArray[i].id, dayId)\n            if (daysArray[i].id === Number(dayId)) {\n                const updatedPostArray = daysArray[i].posts.concat(updatedPost)\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        //console.log(updatedDays, \"function check \")\n        return updatedDays\n    }\n\n    function updateDaysForDeletePost(dayId, daysArray, updatedPosts){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(dayId)) {\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPosts\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForEditPost(daysArray, updatedPostsArray){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostsArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n\n    }\n\n    function updateDaysForAddStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                //console.log(updatedDay)\n                setDay(updatedDay)           //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForDeleteStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                setDay(updatedDay)                //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n    \n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n    \n    //Maping Data for calander render\n    const mappedStickers = stickers.map((sticker) => {\n        return <DayStickerRender sticker={sticker} key={randoNumber()}\n        handleDeleteSticker={handleDeleteSticker}\n        dayStickers ={dayStickers}\n        user = {user}\n        />\n    })\n\n    const mappedPosts = posts.map((post) => {\n        return <PostRender post={post} key={post.id} \n        onDeletePost={handleDeletePost}\n        handleEditPost={handleEditPost}\n        day={day}\n        />\n    })\n\n    //Post handles \n    function handleNewPost(newPost){\n        setPosts([...posts, newPost])\n        //setUser(user)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForNewPost(params.id, user.days, newPost)\n        //console.log(updatedUser, \"the user before the update\")\n        //console.log(updatedUser.days, \"usersdays before update\")\n        updatedUser.days = updatedDays\n        //console.log(updatedDays, \"updated days\")\n\n        setUser(updatedUser)\n\n    }\n\n    function handleDeletePost(removedPost){\n        \n        const updatedPosts = posts.filter((post) => (\n            post.id !== removedPost.id ? true : false\n        ))\n        setPosts(updatedPosts)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForDeletePost(params.id, user.days, updatedPosts)\n        updatedUser.days = updatedDays\n\n        setUser(updatedUser)\n    }\n    \n    function handleEditPost(updatedPost){\n        const updatedPostsArray = posts.map((post) => {\n            if (post.id === updatedPost.id){\n                return updatedPost;\n            } else {\n                return post\n            }\n        })\n        setPosts(updatedPostsArray) //This sets the posts for the day not the whole user!\n\n        let updatedUser = user \n        const updatedDays = updateDaysForEditPost(user.days, updatedPostsArray)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n        //console.log(user, \"adf\")\n    }\n\n    //sticker Handles \n    function handleNewDaySticker(newStickerjoiner){\n        const updatedStickers = [...stickers, newStickerjoiner.sticker]\n        setStickers(updatedStickers)\n        //console.log(updatedStickers)\n\n        const newDayStickerJoiner = {\n            id: newStickerjoiner.id,\n            day_id: newStickerjoiner.day.id,\n            sticker_id: newStickerjoiner.sticker.id,\n        }\n        const updatedDayStickers = [...dayStickers, newDayStickerJoiner]\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n    function handleDeleteSticker(removedSticker, removedDaySticker){\n        //console.log(removedSticker)\n        //might need to make a custom loop for this one. \n        //temporatry work around is done \n\n        let wasRemoved = false\n        // let updatedStickers = []\n\n        // for (let i =0; i < stickers.length; i++){\n        // }\n\n        const updatedStickers = stickers.filter((sticker) => {\n            if ((sticker.id !== removedSticker.id) || (wasRemoved === true)){\n                return true \n            } else {\n                wasRemoved = true\n                return false \n            }\n        })\n        const updatedDayStickers = day.day_stickers.filter((joiner) => (\n            joiner.id !== removedDaySticker.id ? true : false\n        ))\n\n        setStickers(updatedStickers)\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForDeleteStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n\n    //Loading data block \n\n    if (!isLoaded) return <h2>Loading... or maybe you do not have access to this post.</h2>\n    else {\n    return(\n            <div className=\"grid-container-day\">\n\n\n            <div className=\"Info\">\n                <div className=\"Date\">\n                    <Link to={`/days/${prevDay.id}`}><button >Prev</button></Link>\n                    <a>{day.date}</a>\n                    <Link to={`/days/${nextDay.id}`}><button >Next</button></Link>\n                </div>\n\n                \n                <a>Stickers:</a><div className=\"sticker-day-wrap\"> {mappedStickers} </div>\n            </div>\n            \n            <div className=\"Entries\">\n                <div> \n                    <label className=\"entry-label\">Entries:</label>\n                    <div className=\"entries-wrap\">\n                    {mappedPosts}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"New-Entries\">\n            <NewPostForm day={day} handleNewPost={handleNewPost}/>\n            </div>\n\n            <div className=\"StickersAdd\">\n                <NewDayStickerForm day={day} handleNewDaySticker={handleNewDaySticker} userStickers={user.stickers}/>\n            </div>\n            \n\n            <br></br>\n            <br></br>\n            </div>\n        )\n    }\n}\n\nexport default Day","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["153","154"],"\nfunction DayStickerRender({sticker, handleDeleteSticker, dayStickers}){\n\n    //THis is the day_sticker \n\n    let daySticker = dayStickers.find((dayS) => {\n        return (sticker.id === dayS.sticker_id)\n    })\n\n    //console.log(dayStickers, \"daystickers\")\n\n    function handleDeleteClick(){\n        //console.log(post.id)\n        //const id = sticker.id.toString()\n        fetch(`http://localhost:3000/day_stickers/${daySticker.id}`, {\n            method: \"DELETE\",\n        });\n        handleDeleteSticker(sticker, daySticker);\n    }\n\n    return (\n        <div className=\"sticker-day\">\n            <img src={sticker.image} width=\"80\" height=\"80\"/>\n            <button onClick={handleDeleteClick}><a>x</a></button>\n        </div>\n        \n    )\n}\n\nexport default DayStickerRender","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",["155"],"import React, {useState} from \"react\";\nimport EditPostForm from \"./EditPostForm\";\n\nfunction PostRender({post, onDeletePost, handleEditPost, day}){\n\n    const [editmode, setEditmode] = useState(false)\n\n    function handleDeleteClick(){\n        //console.log(post.id)\n        const id = post.id.toString()\n        fetch(`http://localhost:3000/posts/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeletePost(post);\n    }\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    \n    return (\n        <div className=\"Entry-card\">\n            \n            <h3>{post.title}</h3>\n\n            <p style={{color: post.text_color}}>{post.context}</p>\n\n            {post.image ? <img src={post.image} width=\"200\" height=\"200\"/> : null}\n            <br/>\n            {(editmode === true)\n            ? <EditPostForm post={post} handleEditPost={handleEditPost} day={day} setEditmode={setEditmode}/>\n            :<button onClick={handleEditClick}>Make a Change</button>\n            }\n            <button onClick={handleDeleteClick}>Remove Post</button>\n        </div>\n        \n    )\n}\n\nexport default PostRender","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],["156","157"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["158"],"import React, {useState} from \"react\";\n\nfunction NewDaySticker({handleNewDaySticker, day, userStickers}){\n\n    const [formData, setFormData] = useState({\n        day_id: day.id,\n        sticker_id: 1,\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n        \n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newStickerjoiner => handleNewDaySticker(newStickerjoiner))\n    }\n\n    // <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\">\n    // <label for=\"male\">Male</label><br>\n\n    const userStickerMapped = userStickers.map((sticker) => {\n        return (\n                <div className=\"sticker\" key={sticker.id}>\n                    <img src={sticker.image} width=\"80\" height=\"80\"/>\n                    <input type=\"radio\" name=\"sticker_id\" value={sticker.id} onChange={handleFormChange}/>\n                    <label >{sticker.name}</label>\n                </div> \n            )   \n    })\n\n    return (\n        <div>\n            <h2>Add a new Sticker! </h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"sticker-wrap\">\n                {userStickerMapped}\n                </div>\n\n                <button type=\"submit\">Apply the Sticker!</button>\n            </form>\n        </div>\n        \n    )\n}\n\nexport default NewDaySticker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["159","160","161","162","163","164"],"import { useState, useEffect }  from \"react\";\nimport EditBioForm from \"./userRenders/EditBioForm\"\nimport NewSticker from \"./userRenders/NewSticker\"\nimport StickerCard from \"./userRenders/StickerCard\";\n\nimport '../css/User.css';\n\nfunction User({user, setUser}){\n\n    const [editmode, setEditmode] = useState(false)\n    const [stickers, setStickers] = useState(user.stickers)\n\n    //console.log(stickers, \"stickers list\")\n\n    const mappedUserStickers = stickers.map((sticker) => {\n            return <StickerCard sticker={sticker} onDeleteSticker={handleStickerDelete} key={sticker.id}/>\n    \n    })\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    function handleUserEdit(updatedUser){\n        //console.log(\"asdf\")\n        setUser(updatedUser)\n    }\n\n    function handleStickerDelete(removedSticker){\n        console.log(removedSticker)\n        const updatedStickers = stickers.filter((sticker) =>{\n            return (sticker.id !== removedSticker.id)\n        })\n        setStickers(updatedStickers)\n        const updatedUser = user\n        updatedUser.stickers = updatedStickers\n        setUser(updatedUser)\n    }\n\n    function handleNewSticker(newSticker){\n        //console.log(stickers, \"stickers before\")\n        //console.log(newSticker)\n        setStickers([...stickers, newSticker])\n\n        let updatedUser = user \n        updatedUser.stickers = [...stickers, newSticker]\n        setUser(updatedUser)\n        //console.log(updatedUser)\n        //console.log(user)\n    }\n\n    return(\n        <div className=\"grid-container-user\">\n            \n            <div className=\"Bio\">\n            <h3>Username: {user.username}</h3>\n            <h3>Name: {user.name}</h3>\n            {(user.picture) ? <img src={user.picture} width=\"200\" height=\"200\"/> : null}\n            <h3>Bio: {user.bio}</h3>\n            <a>Stickers: {user.stickers.length}</a><br/>\n            <a>Journal Entries: {user.posts.length}</a><br/>\n            <a>Sribbles Entries: {user.notes.length}</a><br/>\n            <a>Stickers Placed: {user.day_stickers.length}</a>\n            </div>\n            \n            <div className=\"yourStickers\">\n            <h3>Your Stickers:</h3>\n\n            <div className=\"stickers\">\n                {mappedUserStickers}\n            </div>\n            </div>\n\n            <div className=\"editForm\">\n            {(editmode === true)\n                ? <EditBioForm user={user} handleUserEdit={handleUserEdit} setEditmode={setEditmode}/>\n                :<button className=\"edit-bio-bttn\" onClick={handleEditClick}>Edit Bio</button> \n                \n            }\n            </div>\n\n            <div className=\"upload\">\n            <NewSticker user={user} handleNewSticker={handleNewSticker}/>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default User\n\n/* <div class=\"grid-container\">\n  <div class=\"Header\"></div>\n  <div class=\"Bio\"></div>\n  <div class=\"yourStickers\"></div>\n  <div class=\"upload\"></div>\n  <div class=\"editForm\"></div>\n</div> */","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["165","166","167"],"import { useState }  from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport '../css/SignUp.css';\n\nfunction SignUp ({setUser}){\n    \n    // function sleep(milliseconds) {\n    //     const date = Date.now();\n    //     let currentDate = null;\n    //     do {\n    //       currentDate = Date.now();\n    //     } while (currentDate - date < milliseconds);\n    //   }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        bio: \"\",\n    })\n\n\n    const [passwordCheck, setpasswordCheck] = useState(\"\")\n\n    const [accountMade, setAccoutMade] = useState(false)\n    const [showPassword, setShowPassWord] = useState(\"password\")\n    const history = useHistory();\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n\n        fetch(`http://localhost:3000/users`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newUser => handleNewDays(newUser))\n    }\n\n\n    function handleNewDays(newUser){\n\n        let today = new Date(Date.parse('2021/01/01'));\n\n        for (let i = 0; i < 365; i++) {\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); \n            let yyyy = today.getFullYear();\n            let formatedDate = mm + '/' + dd + '/' + yyyy;\n            today.setHours(today.getHours() + 24)\n\n            const data = {\n                user_id: newUser.id,\n                date: formatedDate\n            }\n            //console.log(data.date)\n\n            fetch(`http://localhost:3000/days`,{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n                })\n            .then(r => r.json())\n\n        }\n\n        autoSticker(newUser)\n\n    }\n\n    function autoSticker(newUser){\n\n        const dataSticker = {\n            image: \"../imgs/hyped.jpg\",\n            name: \"Hyped\",\n            user_id: newUser.id,\n        }\n\n        fetch(`http://localhost:3000/stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(dataSticker),\n            })\n        .then(r => r.json())\n\n        console.log(\"New user done!\")\n        //setAccoutMade(true)\n        //setAutoLoginNewUser(newUser)\n        handleLogin();\n    }\n\n    function handleLogin() {\n        //e.preventDefault();\n        const username = formData.username\n        const password = formData.password\n        //console.log(\"adssadf\")\n\n        fetch(\"http://localhost:3000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ username, password }),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // data is an object with a user and token: { user, token }\n            // setCurrentUser is a callback function from the App component\n            setUser(data.user);\n            // use localStorage to save the token\n            localStorage.setItem(\"token\", data.token)\n            //redirect \n            history.push(\"/\");\n        });\n    }\n\n    function handleShowPassword(){\n        if (showPassword === \"password\"){\n            setShowPassWord(\"text\")\n        } else {\n            setShowPassWord(\"password\")\n        } \n    }\n\n    if(accountMade){\n        return (\n            <div>\n                <Link to={\"/login\"}>\n                 Account Made Succesful, Please Login By Clicking Here\n                 </Link>\n            </div>\n        )\n    } else {\n    return (\n        <div className=\"SignUp-Container\">\n            <br/><br/><br/><br/>\n            <h2>SignUp!</h2>\n            <form onSubmit={handleSubmit}>\n                <label>UserName</label>\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"\n                value={formData.username}\n                onChange={handleFormChange}\n                />\n                <br/>\n                <label>Password</label>\n                <input type={showPassword} name=\"password\" placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleFormChange}\n                />\n                \n                <input type=\"checkbox\" onClick={handleShowPassword}/> <label>Show Password  </label>\n                <br/>\n                <label>Your Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Name\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <br/>\n                <label>About Yourself</label>\n                <textarea className=\"New-User-textarea-2\" type=\"textarea\" name=\"bio\" placeholder=\"About Yourself!\"\n                value={formData.bio}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Make an Account </button>\n            </form>\n        </div>\n        )\n    }\n}\n\n\nexport default SignUp ","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["168","169"],"//import { useState, useEffect }  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Day from \"../Day\";\nimport NewDaySticker from \"../dayRenders/NewDayStickerForm\";\n//import CalendarDay from \"./CalendarDay\"\n\n\nfunction CalendarMaker({daysSliced, month, stickerMode, stickerSelected, handleNewDaySticker}){\n\n    //console.log(daysSliced)\n    const monthC = month % 12\n\n\n    function handleDayStickerClick(event) {\n        if (stickerSelected !== null){\n        let dayId = event.target.getAttribute(\"data-value\")\n        //console.log(event.target.getAttribute(\"data-value\"), \"dayID\")\n        //console.log(stickerSelected, \"stickerID\")\n\n        if (dayId === null){\n            console.log(\"null\")\n            console.log(event.target)\n            dayId = event.target.parentElement.getAttribute(\"data-value\")\n            console.log(dayId)\n        }\n        \n        const data = {\n            day_id: dayId,\n            sticker_id: stickerSelected,\n        }\n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n        .then(r => r.json())\n        .then(newDaySticker => handleNewDaySticker(newDaySticker))\n        }\n\n    }\n\n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n\n    //This is a helper function for daysMapped rendering, This deals with making each sticker show. \n    function postStickers(stickers, day_id){\n        const stickersMapped = stickers.slice(0, 3).map((sticker) => {\n            return <img src={sticker.image} alt={sticker.name} width=\"30\" height=\"30\" key={randoNumber()}/>\n        })\n        return <div data-value={day_id}>{stickersMapped}</div>\n    }\n\n    const daysMapped = daysSliced.map((day) => {\n        //return <CalendarDay day={day} key={day.id}/>\n\n        //First Part of is for the normal calendar redirects, \n        //This makes diffrenet calendar day boxes based on the attributes in the \"day\" object\n        if (stickerMode === false) {  \n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\" >\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>{day.posts[0].title.slice(0,12)}.</div>\n                        {postStickers(day.stickers, day.id)}\n                    </div>\n                    </Link>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\" >\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>{day.posts[0].title.slice(0,12)}.</div>\n                    </div>\n                    </Link>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers, day.id)}\n                    </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">{day.date.slice(0,5)}</div>\n                    </Link>\n                )\n            }\n        } else {\n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>{day.posts[0].title.slice(0,12)}.</div>\n                        \n                        {postStickers(day.stickers, day.id)}\n                    </div>  \n                )\n            } else if (day.posts[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>{day.posts[0].title.slice(0,12)}.</div>\n                    </div>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers, day.id)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}\n                    </div>\n                )\n            }\n\n        }\n\n    })\n\n    function weekdayNames(){\n        return (\n            <div className=\"weekdays\">\n                <div className=\"calendarDayLabels\">Sun</div>\n                <div className=\"calendarDayLabels\">Mon</div>\n                <div className=\"calendarDayLabels\">Tue</div>\n                <div className=\"calendarDayLabels\">Wed</div>\n                <div className=\"calendarDayLabels\">Thu</div>\n                <div className=\"calendarDayLabels\">Fri</div>\n                <div className=\"calendarDayLabels\">Sat</div>\n            </div>\n        )\n    }\n\n    if (monthC === 0){\n    return (\n       \n        <div className=\"calendar\">\n\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n        </div>\n        \n    )} else if (monthC === 1){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 2){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 3){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC ===4){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 5){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 6){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 7){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 8){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 9){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 10){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 11){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }\n        else {\n        return <div> loading not yet coded yet</div>\n    }\n\n    \n\n}\n\nexport default CalendarMaker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["170","171","172"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["173","174","175","176"],"import { useParams, Link , Redirect} from \"react-router-dom\";\nimport React, {useState} from \"react\";\n\n\nimport '../css/NavBar.css';\n\nfunction NavBar({user, setUser }){\n    //navBarSearch, setNavBarSearch, redirect, setRedirect \n    //  const [ navSearch, setNavSearch] = useState(\"\")\n    //console.log(navBarSearch)\n    // const [redirect, setRedirect ] =useState(false)\n    //const [redirectToSearch, setRedirectToSearch] = useState(false)\n    // const []\n\n    //const [name, setName] = useState(user.name)\n\n    function handleLogOut(){\n        localStorage.removeItem(\"token\")\n        setUser(null)\n    }\n\n    // function handleSearch(e){\n    //     e.preventDefault()\n    //     //console.log(navBarSearch)\n    //     //setRedirectToSearch(!redirectToSearch)\n    //     setSearchTerm(navSearch)\n    //     setRedirect(!redirect)\n    //     //redirectToSearch()\n    //     //setNavBarSearch(\"\")\n    // }\n\n    // function redirectToSearch(){\n    //     return (<Redirect to=\"/search\" /> )\n    // }\n    // {redirect ? <Redirect to=\"/search\" /> : null}\n\n    if (user === null){\n        return (\n            <div className=\"navBar\">    \n                <Link to={`/`}><span className=\"Nav-Bar-Options\">Home</span></Link>\n                <Link to=\"/login\"><span className=\"Nav-Bar-Options\">Login </span></Link>\n                <Link to=\"/signup\"><span className=\"Nav-Bar-Options\">Sign Up</span></Link>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"navBar\" >\n             \n            <Link to={`/`}><span className=\"Nav-Bar-Options\">Home</span></Link>\n            <Link to={`/calendar`}><span className=\"Nav-Bar-Options\">My Calendar</span></Link>\n            <Link to={`/notes`}><span className=\"Nav-Bar-Options\">My Scribbles</span></Link>\n            <Link to={`/users/${user.id}`}><span className=\"Nav-Bar-Options\">My Page</span></Link>\n            <Link to={`/search`}><span className=\"Nav-Bar-Options\">Search</span></Link>\n\n            {/* <form  onSubmit={handleSearch}>\n                <input \n                        value={navSearch}\n                        onChange={(e) => setNavSearch(e.target.value)} \n                        type=\"text\"\n                        placeholder={\"Search Your Entries\"}\n                />\n            </form> */}\n\n            {/* {redirectToSearch ? <Redirect to=\"/search\" /> : null} */}\n\n\n            <div className=\"button-div\"><Link to={`/`}><button onClick={handleLogOut}>Log out</button></Link></div>\n            <a className=\"username\">{user.name}</a>\n            \n            </div>    \n        )\n    } \n    //  else {\n    //     return (\n    //         <div>\n               \n    //             <Link to={`/`}>Home</Link>\n    //             {/* {} */}\n    //             {/* <Link to={`/users/${user.id}`}>User</Link> */}\n                \n    //         </div>\n    //     )\n    // }\n\n\n}\n\nexport default NavBar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["177","178","179"],"function UserStickers({sticker}){\n\n\n\n\n    return (\n        <div className=\"stickerCard\"> \n                \n                <span className=\"radio__input\">\n                    <a>{sticker.name}</a>\n\n                    <label><input type=\"radio\" name=\"choice\" value={sticker.id}/></label>\n                    {/* <span class=\"radio__control\"></span> */}\n\n                </span>\n            \n            <div className=\"image-center\">\n                <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n            </div>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}\n\n{/* <label class=\"radio\">\n  <span class=\"radio__input\">\n    <input type=\"radio\" name=\"radio\">\n    <span class=\"radio__control\"></span>\n  </span>\n  <span class=\"radio__label\">Radio 1</span>\n</label> */}","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js",["180","181"],"import '../css/home.css';\n// import '../css/stars.css';\n\nfunction Home ({user}){\n\n    if (user === null){\n        return (\n            <div className=\"titleCard\"> \n            {/* <h1>JournalSoft 2021 </h1> */}\n            <img src=\"../imgs/home.png\"/>\n            \n            {/* <Link to=\"/login\"><h2> Login Here </h2> </Link>\n            <Link to=\"/signup\"><h2>New? Sign Up here!</h2></Link> */}\n            {/* <div class=\"wrapper\">\n                <div id=\"stars\"></div>\n                <div id=\"stars2\"></div>\n            {/* <div id=\"stars3\"></div> </div> */}\n\n            </div>\n        )\n    } else {\n    return (\n        <div className=\"titleCard\"> \n        {/* <h1>JournalSoft 2021 </h1> */}\n        <img src=\"../imgs/home.png\"/>\n        <h2>Welcome Back {user.name}</h2> \n        \n\n        <div class=\"wrapper\">\n            <div id=\"stars\"></div>\n            <div id=\"stars2\"></div>\n            {/* <div id=\"stars3\"></div> */}\n        </div>\n\n        </div>\n    )}\n\n}\n\nexport default Home","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js",["182","183","184","185","186","187","188","189","190","191"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport '../css/LoginPage.css';\n\nfunction LoginPage ({user, setUser}){\n\n    const [users, setUsers] = useState(null)\n    const [isLogin, setIsLogin] = useState(false)\n    const [formData, setFormData] = useState({ \n        username: \"\",\n        password: \"\",\n    })\n\n    \n    const [showPassword, setShowPassWord] = useState(\"password\")\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const history = useHistory();\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    // useEffect(() => { \n    //     fetch(`http://localhost:3000/users/`)\n    //     .then(resp => resp.json())\n    //     .then(data => {\n    //     setUsers(data)\n        \n    //     })\n    // }, [])\n\n    // function handleLogin(event){\n    //     event.preventDefault()\n    //     //console.log(formData)\n    //     let success = false\n\n    //     for(let i = 0; i < users.length; i++){\n    //         let cond1 = (users[i].username === formData.username)\n    //         let cond2 = (users[i].password === formData.password)\n    //         //console.log(users[i].username)\n    //         if (cond1 && cond2){\n    //             setUser(users[i])\n    //             success = true\n    //             setIsLogin(true)\n    //         }\n    //     }\n    //     if (success){\n    //         loginSucess()\n    //     } else {\n    //         loginFail()\n    //     }\n    //}\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(\"http://localhost:3000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ username, password }),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n              if (data.failure) {\n                  alert(\"Incorrect Username or Password\")\n              } else {\n            // data is an object with a user and token: { user, token }\n            // setCurrentUser is a callback function from the App component\n            setUser(data.user);\n            // use localStorage to save the token\n            localStorage.setItem(\"token\", data.token)\n            //redirect \n            history.push(\"/\");\n            }\n        });\n    }\n\n\n    function loginSucess(){\n        alert(\"Successful Login\")\n        // window.location = \"/\"\n    }\n\n    function loginFail() {\n        alert(\"Wrong Username or password\");\n    }\n\n    function handleWelcomeBack(){\n\n    }\n\n    function handleShowPassword(){\n        if (showPassword === \"password\"){\n            setShowPassWord(\"text\")\n        } else {\n            setShowPassWord(\"password\")\n        } \n    }\n    \n\n    // if (!users) {\n    //     return <h1> Loading </h1>\n    // } else \n    // if (!isLogin){\n        return (\n            <div className=\"Login-Container\">\n                <br/><br/><br/><br/>\n                <h1> Login to your JournalSoft Account</h1>\n                <form onSubmit={handleSubmit}>\n\n                    <label >Username</label>\n                    <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" value={username}\n                     onChange={(e) => setUsername(e.target.value)}/>  \n                    <br/>\n                    <label >Password</label>\n                    <input type={showPassword} placeholder=\"Enter Password\" name=\"password\" value={password}\n                     onChange={(e) => setPassword(e.target.value)} id=\"myPasswordInput\"/>  \n                     <input type=\"checkbox\" onClick={handleShowPassword}/> <label>Show Password</label>\n                    <br/>\n                    <button type=\"submit\">Login</button>\n                </form>\n                {/* <button onClick={myFunction}>Try it</button> */}\n\n\n\n            </div>\n        )\n    // } \n    // else {\n    //     return (\n    //         <button onClick={handleWelcomeBack}><Link to={\"/calendar\"}> Welcome back! </Link></button> \n    //     )\n    // }\n\n}\n\nexport default LoginPage\n\n","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js",["192","193"],"function StickerCard({sticker, onDeleteSticker}){\n\n    function onDeleteClick(event){\n\n        //console.log(post.id)\n        const id = sticker.id.toString()\n        console.log(id)\n        fetch(`http://localhost:3000/stickers/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeleteSticker(sticker);\n    }\n\n\n    return (\n        <div key={sticker.id} className=\"sticker\">\n            <a>{sticker.name}</a>\n            <button onClick={onDeleteClick}>x</button>\n            <br/>\n            \n            <img src={sticker.image} width=\"80\" height=\"80\"/>\n            \n        </div>\n    )\n\n}\n\nexport default StickerCard","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Notes.js",["194"],"import React, { useState, useEffect } from \"react\";\nimport NoteCard from \"./notesRenders/NoteCard\";\nimport NewNoteForm from \"./notesRenders/NewNoteForm\"\nimport '../css/Notes.css';\n\n\nfunction Notes ({user, setUser}){\n\n    const [notes, setNotes] = useState(user.notes)\n    const [index, setIndex] = useState(0)\n    const [showAmount, setShowAmount] =useState(5)\n\n    const notesMapped = notes.slice(index, index + showAmount).map((note) =>{\n        return <NoteCard key={note.id} note={note} onDeleteNote={onDeleteNote} handleEditNote={handleEditNote}/>\n    })\n\n    function handleNewNote(newNote){\n        setNotes([...notes, newNote])\n\n        let updatedUser = user\n        updatedUser.notes = [...notes,newNote]\n        setUser(updatedUser)\n        setIndex((Math.floor(notes.length / showAmount)) * showAmount)\n    }\n\n    function onDeleteNote(removedNote){\n\n        const updatedNotes = notes.filter((note) => {\n            return removedNote.id !== note.id \n        })\n        setNotes(updatedNotes)\n\n        let updatedUser = user\n        updatedUser.notes = updatedNotes\n        setUser(updatedUser)\n    }\n\n    function handleEditNote(updatedNote){\n        const updatedNotes = notes.map((note) => {\n            if (note.id === updatedNote.id){\n                return updatedNote\n            } else {\n                return note\n            }\n        })\n        setNotes(updatedNotes)\n\n        let updatedUser = user \n        updatedUser.notes = updatedNotes\n        setUser(updatedUser)\n\n    }\n\n    function handleNextPage(){\n        setIndex(index + showAmount)\n    }\n\n    function handlePreviousPage(){\n        setIndex(index - showAmount)\n    }\n\n    function handleShowAmountChange(event){\n        setIndex(0)\n        setShowAmount(event.target.value)\n\n    }\n\n\n    return (\n        <div className=\"grid-container-notes\">\n            <div className=\"Search\">\n                <h2>Your Scribbles!</h2>\n\n                <NewNoteForm user={user} handleNewNote={handleNewNote}  />\n\n            <div className=\"page-settings\">\n                \n                {(index === 0) ? null : <button onClick={handlePreviousPage}>Previous Page</button>}\n                <label>Page: {(Math.floor(index/ showAmount) ) + 1}           </label>\n                {(index + showAmount > notes.length) ? null : <button onClick={handleNextPage}>Next Page</button>}\n\n                <br/>\n                <label>Max Sribbles on One Page:</label>\n                    <select name=\"index\" value={showAmount} onChange={handleShowAmountChange} >\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"15\">15</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"25\">25</option>\n                    </select>\n               \n            </div>\n            <div className=\"Notes-List\">\n            {notesMapped}\n            </div>\n           \n            </div>\n            \n        </div>\n    )\n\n//     <div class=\"grid-container\">\n//   <div class=\"NavBar\"></div>\n//   <div class=\"Search\"></div>\n// </div>\n\n\n}\n\nexport default Notes","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NoteCard.js",["195"],"import React, { useState } from \"react\";\nimport EditNoteForm from \"./EditNoteForm\";\nimport { Link } from \"react-router-dom\";\n\nfunction NoteCard ({note, onDeleteNote, handleEditNote}){\n\n    const [editmodeNote, setEditModeNote] = useState(false)\n\n    function handleDelteClick(){\n        const id = note.id.toString()\n        fetch(`http://localhost:3000/notes/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeleteNote(note);\n    }\n\n    function handleEditClick(){\n        setEditModeNote(!editmodeNote)\n    }\n    \n  \n    return (\n        <div className=\"Note-Card\" >\n            <Link to={`/notes/${note.id}`} style={{ textDecoration: 'none', color: 'black'}}> <label className=\"note-title\" >{note.title}</label> </Link>\n            <p style={{color: note.text_color}}>{note.context}</p>\n            {note.image ? <img src={note.image} width=\"100\" height=\"100\"/> : null}\n            \n            <br/>\n\n            {(editmodeNote === true)\n            ? <EditNoteForm note={note} handleEditNote={handleEditNote} setEditModeNote={setEditModeNote}/>\n            :<button onClick={handleEditClick}>Make a Edit</button>\n            }\n\n            <button onClick={handleDelteClick}>Erase</button>\n\n        </div>\n    )\n}\n\n\n\n\nexport default NoteCard","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NewNoteForm.js",["196"],"import React, { useState, useEffect } from \"react\";\n\nfunction NewNoteForm ({user, handleNewNote}){\n\n    //console.log(notes)\n    const [addFileCheck, setAddFileCheck] = useState(false)\n\n    const [formData, setFormData] = useState({\n        user_id: user.id,\n        title: \"\",\n        context: \"\",\n        text_color: \"#000000\",\n        image: {},\n    })\n\n    const [formDataNoImg, setformDataNoImg] = useState({\n        user_id: user.id,\n        title: \"\",\n        context: \"\",\n        text_color: \"#000000\",\n        image: null\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleFormChangeForUpload(e){\n        e.persist()\n\n        setFormData({...formData,\n            [e.target.name]: e.target.files[0]\n        })\n    }\n    function handleFormChange2(event){\n        // console.log()\n        setformDataNoImg({...formDataNoImg,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n        const form = new FormData()\n        form.append(\"user_id\", formData.user_id)\n        form.append(\"title\", formData.title)       \n        form.append(\"context\", formData.context)\n        form.append(\"text_color\", formData.text_color)\n        form.append(\"image\", formData.image)\n\n        fetch(`http://localhost:3000/notes`,{\n            method: 'POST',\n            body: form,\n            })\n        .then(r => r.json())\n        .then(newNote => handleNewNote(newNote))\n    }\n\n    function handleSubmit2(event){\n        event.preventDefault()\n        //console.log(formDataNoImg)\n\n        fetch(`http://localhost:3000/notes`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formDataNoImg),\n            })\n        .then(r => r.json())\n        .then(newNote => handleNewNote(newNote))\n    }\n\n\n    function handleToggleUpload(){\n        setAddFileCheck(!addFileCheck)\n    }\n    \n    return (\n        <div className=\"new-Note\">\n            <h2>Write a new Scribble</h2>\n            {(addFileCheck === false) ? \n            <form onSubmit={handleSubmit2}>\n                <label>Title: </label>\n                <input className=\"New-Note-textarea-1\" type=\"text\" name=\"title\" placeholder=\"Title\"\n                value={formDataNoImg.name}\n                onChange={handleFormChange2}\n                />\n                <br/>\n                <label>Entry: </label>\n                <textarea className=\"New-Note-textarea-2\" type=\"textarea\" name=\"context\" placeholder=\"Your Entry\"\n                value={formDataNoImg.context}\n                onChange={handleFormChange2}\n                />\n                <br/>\n                <label>Color: </label>\n                <input type=\"color\" name=\"text_color\" \n                value={formDataNoImg.color}\n                onChange={handleFormChange2}\n                />\n                <br/>\n                <button className=\"submit-button\" type=\"submit\">Add the Scribble! </button>\n            </form>\n            :\n            \n            <form onSubmit={handleSubmit}>\n                <label>Title: </label>\n                <input className=\"New-Note-textarea-1\" type=\"text\" name=\"title\" placeholder=\"Title\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <br/>\n                <label>Entry: </label>\n                <textarea className=\"New-Note-textarea-2\" type=\"textarea\" name=\"context\" placeholder=\"Your Entry\"\n                value={formData.context}\n                onChange={handleFormChange}\n                />\n                <br/>\n                <label>Color: </label>\n                <input type=\"color\" name=\"text_color\" \n                value={formData.color}\n                onChange={handleFormChange}\n                />\n                <br/>\n                <input type=\"file\" name=\"image\" onChange={handleFormChangeForUpload}/>\n                <br/>\n                <button className=\"submit-button\" type=\"submit\">Add the Scribble! </button>\n            </form>\n            }\n            <button onClick={handleToggleUpload}>Upload a Picture (optional)</button>\n        </div>\n    )\n}\n\n\n\n\nexport default NewNoteForm","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/EditNoteForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Search.js",["197","198","199","200","201","202"],"import React, { useState, useEffect } from \"react\";\nimport SearchTermSet from \"./SearchRenders/SearchTermSet\"\nimport { Link } from \"react-router-dom\";\nimport '../css/Search.css';\n\nimport ResultCard from \"./SearchRenders/ResultCard\"\n\nfunction Notes ({user }){\n    // setNavBarSearch, navBarSearch \n\n    //setRedirect(false)\n    \n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const [searchFilter, setSearchFilter] = useState(\"All\")\n    const [searchFilter2, setSearchFilter2] = useState(\"All\")\n    const [index, setIndex] = useState(0)\n    const [showAmount, setShowAmount] =useState(5)\n\n\n    const filterPosts = user.posts.filter( post => {\n\n        const cond1 = post.context.toLowerCase().includes(searchTerm.toLowerCase())\n        const cond2 = post.title.toLowerCase().includes(searchTerm.toLowerCase())\n\n        if(searchFilter2 === \"All\"){\n        return (cond1 || cond2)\n        } else if (searchFilter2 === \"Title\"){\n            return  (cond2)\n        } else if (searchFilter2 === \"Context\"){\n            return  (cond1)\n        } \n    })\n\n    const filterNotes = user.notes.filter( note => {\n        const cond1 = note.context.toLowerCase().includes(searchTerm.toLowerCase())\n        const cond2 = note.title.toLowerCase().includes(searchTerm.toLowerCase())\n        if(searchFilter2 === \"All\"){\n            return (cond1 || cond2)\n            } else if (searchFilter2 === \"Title\"){\n                return  (cond2)\n            } else if (searchFilter2 === \"Context\"){\n                return  (cond1)\n            } \n    } )\n\n\n    const filterPostMapped = filterPosts.map((post) => {\n        return (\n                <ResultCard post={post} key={post.id}/>\n            )\n    })\n\n    const filterNotesMapped = filterNotes.map((note) => {\n        return (\n            <ResultCard note={note} key={note.id}/>\n        )\n    })\n    \n    const filterBothNoSliceCount = [...filterPosts, ...filterNotes]\n\n    const filterBOTHMapped = filterBothNoSliceCount.slice(index, index + showAmount).map((blob) =>{\n        const rando = Math.floor(Math.random() * 100000) + 1  \n        return (\n            <ResultCard blob={blob} key={rando}/>\n        )\n    })\n\n    function handleSearchTerm(event){\n        setSearchFilter(event.target.value)\n    }\n    function handleSearchTerm2(event){\n        setSearchFilter2(event.target.value)\n    }\n    //console.log []\n\n    //The 3 functions for handling the page changing. \n    function handleNextPage(){\n        setIndex(index + showAmount)\n    }\n\n    function handlePreviousPage(){\n        setIndex(index - showAmount)\n    }\n\n    function handleShowAmountChange(event){\n        setIndex(0)\n        setShowAmount(event.target.value)\n\n    }\n\n    return (\n\n        <div>\n            <br/><br/><br/><br/>\n            <div className=\"Search-Container\">\n            <h2>SeachPage</h2> \n            <h4>Options: </h4>\n            \n            <div>\n\n            <div className=\"Options\">\n            <label>What to Search in? </label>\n            <select name=\"Where\" value={searchFilter} onChange={handleSearchTerm} >\n                        <option value=\"All\">All</option>\n                        <option value=\"Entries\">Entries</option>\n                        <option value=\"Notes\">Notes</option>\n\n            </select>\n            </div>\n\n            <div className=\"Options\">\n            <label>Where to Search?     </label>\n            <select name=\"How\" value={searchFilter2} onChange={handleSearchTerm2} >\n                        <option value=\"All\">All</option>\n                        <option value=\"Title\">Title</option>\n                        <option value=\"Context\">Context</option>\n\n            </select>\n            </div>\n\n            <SearchTermSet searchTerm={searchTerm} setSearchTerm={setSearchTerm}/>\n\n            <div className=\"Options\">\n            <label>Max Sribbles on One Page: </label>\n                    <select name=\"index\" value={showAmount} onChange={handleShowAmountChange} >\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"15\">15</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"25\">25</option>\n                    </select>\n               \n            </div>\n\n            </div>\n\n            \n            \n            {(searchTerm === \"\") ? null : <p>Page: {(Math.floor(index/ showAmount) ) + 1}</p>}\n                {(index === 0) ? null : <button onClick={handlePreviousPage}>Previous Page</button>}\n                {/* {index + showAmount} asdfa {filterBothNoSliceCount.length} */}\n                {(((index + showAmount) > filterBothNoSliceCount.length)  || (searchTerm === \"\")) \n                ? null : <button onClick={handleNextPage}>Next Page</button>}\n            \n            <h3>Results</h3>\n            {/* {(searchTerm === \"\") ? null : <div>{filterPostMapped}</div>}\n            {(searchTerm === \"\") ? null : <div>{filterNotesMapped}</div>} */}\n            {(searchTerm === \"\") ? null : <div className=\"results\">{filterBOTHMapped}</div>}\n\n            <br/>\n            {(searchTerm === \"\") ? null : <p>Page: {(Math.floor(index/ showAmount) ) + 1}</p>}\n            {(index === 0) ? null : <button onClick={handlePreviousPage}>Previous Page</button>}\n                {(((index + showAmount ) > filterBothNoSliceCount.length)  || (searchTerm === \"\")) \n                ? null : <button onClick={handleNextPage}>Next Page</button>}\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default Notes","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/SearchTermSet.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/ResultCard.js",["203"],"import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResultCard({ blob}){\n\n    // if (post){\n    //     return (\n            \n    //         <div key={post.id}>\n    //             <Link to={`/days/${post.day_id}`}>\n    //             <h3>{post.date.slice(0,5)}: {post.title}</h3>\n    //             <p style={{color: post.text_color}}>{post.context}</p>\n    //             </Link>\n    //         </div>   \n    //     )}\n    // if (note){\n    //     return(\n    //         <div>\n    //             <Link to={`/notes/${note.id}`}>\n    //             <h3>Note: {note.title}</h3>\n    //             <p style={{color: note.text_color}}>{note.context}</p>\n    //             </Link>\n    //         </div> \n    //     )\n    // } \n    // ONe function for 2 jobs now! \n    if(blob.date && !blob.image){\n        \n        return (\n            <div className=\"blob-Card\">\n                <Link to={`/days/${blob.day_id}`} style={{ textDecoration: 'none', color: 'black'}}>\n                <h3>{blob.date.slice(0,5)}: {blob.title}</h3>\n                <p style={{color: blob.text_color}} >{blob.context}</p>\n                </Link>\n            </div>   \n        )}\n    else if (blob.date){\n            return (\n            <div className=\"blob-Card\">\n            <Link to={`/days/${blob.day_id}`} style={{ textDecoration: 'none', color: 'black'}}>\n            <h3>{blob.date.slice(0,5)}: {blob.title}</h3>\n            <img src={blob.image} alt={blob.context} width=\"100\" height=\"100\"/>\n            <p style={{color: blob.text_color}} >{blob.context}</p>\n            </Link>\n        </div>   \n        )} \n    else if (!blob.date && !blob.image) {\n        return(\n            <div className=\"blob-Card\">\n                <Link to={`/notes/${blob.id}`} style={{ textDecoration: 'none', color: 'black'}}>\n                <h3>Note: {blob.title}</h3>\n                <p style={{color: blob.text_color}}>{blob.context}</p>\n                </Link>\n            </div> \n        )\n    } else {\n        return (\n            <div className=\"blob-Card\">\n            <Link to={`/notes/${blob.id}`} style={{ textDecoration: 'none', color: 'black'}}>\n            <h3>Note: {blob.title}</h3>\n            <img src={blob.image} alt={blob.context} width=\"100\" height=\"100\"/>\n            <p style={{color: blob.text_color}}>{blob.context}</p>\n            </Link>\n        </div> \n        )\n    }\n\n}\n\nexport default ResultCard","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/NoteShow.js",["204"],"import React, { useState, useEffect } from \"react\";\nimport EditNoteForm from \"./notesRenders/EditNoteForm\";\nimport { useParams, Link } from \"react-router-dom\";\nimport '../css/NoteShow.css';\n\nfunction NoteShow ({user, setUser}){\n\n    const params = useParams();\n    const [note, setNote] = useState(false)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [editmodeNote, setEditModeNote] = useState(false)\n\n    function search(dayId, daysArray){\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayId) {\n                return daysArray[i];\n            }\n        }\n    }\n\n    useEffect(() => {\n        const resultObject = search(Number(params.id), user.notes)\n        setNote(resultObject)\n        setIsLoaded(true);\n    },[params.id])\n\n    function handleDelteClick(){\n        const id = note.id.toString()\n        fetch(`http://localhost:3000/notes/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeleteNote(note);\n    }\n\n    function onDeleteNote(removedNote){\n        const updatedNotes = user.notes.filter((note) => {\n            return removedNote.id !== note.id \n        })\n\n        let updatedUser = user\n        updatedUser.notes = updatedNotes\n        setUser(updatedUser)\n    }\n\n    function handleEditNote(updatedNote){\n        setNote(updatedNote)\n        const updatedNotes = user.notes.map((note) => {\n            if (note.id === updatedNote.id){\n                return updatedNote\n            } else {\n                return note\n            }\n        })\n\n        let updatedUser = user \n        updatedUser.notes = updatedNotes\n        setUser(updatedUser)\n    }\n\n    function handleEditClick(){\n        setEditModeNote(!editmodeNote)\n    }\n    \n  if (!isLoaded){\n      return(\n          <div>Loading...</div>\n      )\n  }\n    return (\n        \n        <div className=\"grid-container-noteshow\">\n            <br/><br/><br/><br/>\n            <div className=\"Main\">\n            <h4>{note.title}</h4>\n            <p stytle={{color: note.text_color}}>{note.context}</p>\n            \n            {(editmodeNote === true)\n            ? <EditNoteForm note={note} handleEditNote={handleEditNote} setEditModeNote={setEditModeNote}/>\n            :<button onClick={handleEditClick}>Make a Edit</button>\n            }\n            \n            <Link to={\"/notes\"}><button onClick={handleDelteClick}> Erase </button> </Link>\n            </div>\n        </div>\n    )\n}\n\n\nexport default NoteShow",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":29,"column":10,"nodeType":"211","messageId":"212","endLine":29,"endColumn":16},{"ruleId":"209","severity":1,"message":"213","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":19},{"ruleId":"209","severity":1,"message":"214","line":2,"column":21,"nodeType":"211","messageId":"212","endLine":2,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":107,"column":21,"nodeType":"217","endLine":107,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":38,"column":7,"nodeType":"220","endLine":38,"endColumn":18,"suggestions":"221"},{"ruleId":"215","severity":1,"message":"216","line":285,"column":21,"nodeType":"217","endLine":285,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":290,"column":17,"nodeType":"217","endLine":290,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":23,"column":13,"nodeType":"217","endLine":23,"endColumn":62},{"ruleId":"215","severity":1,"message":"216","line":24,"column":49,"nodeType":"217","endLine":24,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":28,"column":27,"nodeType":"217","endLine":28,"endColumn":75},{"ruleId":"205","replacedBy":"224"},{"ruleId":"207","replacedBy":"225"},{"ruleId":"222","severity":1,"message":"223","line":38,"column":21,"nodeType":"217","endLine":38,"endColumn":70},{"ruleId":"209","severity":1,"message":"226","line":1,"column":20,"nodeType":"211","messageId":"212","endLine":1,"endColumn":29},{"ruleId":"222","severity":1,"message":"223","line":57,"column":31,"nodeType":"217","endLine":57,"endColumn":81},{"ruleId":"215","severity":1,"message":"216","line":59,"column":13,"nodeType":"217","endLine":59,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":60,"column":13,"nodeType":"217","endLine":60,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":61,"column":13,"nodeType":"217","endLine":61,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":62,"column":13,"nodeType":"217","endLine":62,"endColumn":16},{"ruleId":"209","severity":1,"message":"227","line":23,"column":12,"nodeType":"211","messageId":"212","endLine":23,"endColumn":25},{"ruleId":"209","severity":1,"message":"228","line":23,"column":27,"nodeType":"211","messageId":"212","endLine":23,"endColumn":43},{"ruleId":"209","severity":1,"message":"229","line":25,"column":25,"nodeType":"211","messageId":"212","endLine":25,"endColumn":38},{"ruleId":"209","severity":1,"message":"230","line":3,"column":8,"nodeType":"211","messageId":"212","endLine":3,"endColumn":11},{"ruleId":"209","severity":1,"message":"231","line":4,"column":8,"nodeType":"211","messageId":"212","endLine":4,"endColumn":21},{"ruleId":"209","severity":1,"message":"232","line":1,"column":8,"nodeType":"211","messageId":"212","endLine":1,"endColumn":21},{"ruleId":"209","severity":1,"message":"213","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":19},{"ruleId":"209","severity":1,"message":"214","line":2,"column":21,"nodeType":"211","messageId":"212","endLine":2,"endColumn":25},{"ruleId":"209","severity":1,"message":"213","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":19},{"ruleId":"209","severity":1,"message":"233","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"234","line":2,"column":16,"nodeType":"211","messageId":"212","endLine":2,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":68,"column":13,"nodeType":"217","endLine":68,"endColumn":37},{"ruleId":"215","severity":1,"message":"216","line":10,"column":21,"nodeType":"217","endLine":10,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":26,"column":1,"nodeType":"237","messageId":"238","endLine":26,"endColumn":55},{"ruleId":"235","severity":1,"message":"236","line":28,"column":1,"nodeType":"237","messageId":"238","endLine":34,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":10,"column":13,"nodeType":"217","endLine":10,"endColumn":42},{"ruleId":"222","severity":1,"message":"223","line":25,"column":9,"nodeType":"217","endLine":25,"endColumn":38},{"ruleId":"209","severity":1,"message":"226","line":1,"column":27,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"214","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"239","line":7,"column":12,"nodeType":"211","messageId":"212","endLine":7,"endColumn":17},{"ruleId":"209","severity":1,"message":"240","line":7,"column":19,"nodeType":"211","messageId":"212","endLine":7,"endColumn":27},{"ruleId":"209","severity":1,"message":"241","line":8,"column":12,"nodeType":"211","messageId":"212","endLine":8,"endColumn":19},{"ruleId":"209","severity":1,"message":"242","line":8,"column":21,"nodeType":"211","messageId":"212","endLine":8,"endColumn":31},{"ruleId":"209","severity":1,"message":"243","line":21,"column":14,"nodeType":"211","messageId":"212","endLine":21,"endColumn":30},{"ruleId":"209","severity":1,"message":"244","line":86,"column":14,"nodeType":"211","messageId":"212","endLine":86,"endColumn":25},{"ruleId":"209","severity":1,"message":"245","line":91,"column":14,"nodeType":"211","messageId":"212","endLine":91,"endColumn":23},{"ruleId":"209","severity":1,"message":"246","line":95,"column":14,"nodeType":"211","messageId":"212","endLine":95,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":17,"column":13,"nodeType":"217","endLine":17,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":21,"column":13,"nodeType":"217","endLine":21,"endColumn":62},{"ruleId":"209","severity":1,"message":"226","line":1,"column":27,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"222","severity":1,"message":"223","line":26,"column":27,"nodeType":"217","endLine":26,"endColumn":75},{"ruleId":"209","severity":1,"message":"226","line":1,"column":27,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"226","line":1,"column":27,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"214","line":3,"column":10,"nodeType":"211","messageId":"212","endLine":3,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":20,"column":49,"nodeType":"249","messageId":"250","endLine":20,"endColumn":51},{"ruleId":"247","severity":1,"message":"248","line":34,"column":49,"nodeType":"249","messageId":"250","endLine":34,"endColumn":51},{"ruleId":"209","severity":1,"message":"251","line":47,"column":11,"nodeType":"211","messageId":"212","endLine":47,"endColumn":27},{"ruleId":"209","severity":1,"message":"252","line":53,"column":11,"nodeType":"211","messageId":"212","endLine":53,"endColumn":28},{"ruleId":"209","severity":1,"message":"234","line":1,"column":16,"nodeType":"211","messageId":"212","endLine":1,"endColumn":24},{"ruleId":"218","severity":1,"message":"253","line":25,"column":7,"nodeType":"220","endLine":25,"endColumn":18,"suggestions":"254"},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'loaded' is assigned a value but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["257"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["255"],["256"],"'useEffect' is defined but never used.","'passwordCheck' is assigned a value but never used.","'setpasswordCheck' is assigned a value but never used.","'setAccoutMade' is assigned a value but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'setIsLogin' is assigned a value but never used.","'handleFormChange' is defined but never used.","'loginSucess' is defined but never used.","'loginFail' is defined but never used.","'handleWelcomeBack' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'filterPostMapped' is assigned a value but never used.","'filterNotesMapped' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.notes'. Either include it or remove the dependency array.",["258"],"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [params.id, user.days]",{"range":"263","text":"264"},"Update the dependencies array to be: [params.id, user.notes]",{"range":"265","text":"266"},[1185,1196],"[params.id, user.days]",[773,784],"[params.id, user.notes]"]