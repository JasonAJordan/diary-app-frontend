[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js":"19"},{"size":541,"mtime":1612363761833,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1612300184997,"results":"22","hashOfConfig":"21"},{"size":1484,"mtime":1612648566108,"results":"23","hashOfConfig":"21"},{"size":3841,"mtime":1612627465862,"results":"24","hashOfConfig":"21"},{"size":8729,"mtime":1612644992034,"results":"25","hashOfConfig":"21"},{"size":728,"mtime":1612628536714,"results":"26","hashOfConfig":"21"},{"size":1024,"mtime":1612386478562,"results":"27","hashOfConfig":"21"},{"size":1592,"mtime":1612574091793,"results":"28","hashOfConfig":"21"},{"size":1646,"mtime":1612407932798,"results":"29","hashOfConfig":"21"},{"size":1596,"mtime":1612583198866,"results":"30","hashOfConfig":"21"},{"size":1143,"mtime":1612647749856,"results":"31","hashOfConfig":"21"},{"size":1325,"mtime":1612407704453,"results":"32","hashOfConfig":"21"},{"size":3323,"mtime":1612650587780,"results":"33","hashOfConfig":"21"},{"size":11685,"mtime":1612628084171,"results":"34","hashOfConfig":"21"},{"size":413,"mtime":1612467783688,"results":"35","hashOfConfig":"21"},{"size":585,"mtime":1612650551772,"results":"36","hashOfConfig":"21"},{"size":1012,"mtime":1612564364649,"results":"37","hashOfConfig":"21"},{"size":371,"mtime":1612553192585,"results":"38","hashOfConfig":"21"},{"size":513,"mtime":1612650691623,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"pp5roh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["86","87"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["88","89","90"],"//import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CalendarMaker from \"./CalendarRenders/CalendarMaker\"\nimport StickerApplyBox from \"./CalendarRenders/StickerApplyBox\"\n\nimport '../App.css'\nimport { useState } from \"react\";\n\n\nfunction Calendar({ month, setMonth, user, setUser}){\n\n    const [stickerMode, setStickerMode] = useState(false)\n    const [stickerSelected, setStickerSelected] = useState(null)\n    const [days, setDays ] =useState(user.days)\n    //console.log(user.days , \"userdays\")\n    //console.log(stickerSelected)\n\n    const sliceMonthStart=[0,31,59,90,120,151,181,212,243,273,304,334]\n    const sliceMonthEnd =[31,59,90,120,151,181,212,243,273,304,334,365]\n\n    //const [days, setDays] = useState([user.days])\n\n    const daysOrdered = days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n    \n    const daysSliced = daysOrdered.slice(sliceMonthStart[month], sliceMonthEnd[month])\n\n    //Moved to CalendarMaker.js! Needed to more dynamic\n    // const daysMapped = daysSliced.map((day) => {\n    //     return (\n    //         <Link to={`days/${day.id}`} key={day.id}>\n    //             <div > \n    //                 <h4>{day.date.slice(0,5)}</h4>\n    //             </div>\n    //         </Link>\n    //     )\n    // })\n\n    // const daysMappedStickerMode = daysSliced.map((day) => {\n    //     return (\n    //             <div key={day.id}> \n    //                 <h4>{day.date.slice(0,5)}</h4>\n    //             </div>\n    //     )\n    // })\n\n\n    function updateDaysForAddStickers(daysArray, newDaySticker){\n        const updatedDays = []\n\n        let dayID = newDaySticker.day.id\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == dayID) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers.push(newDaySticker.sticker)\n                updatedDay.day_stickers.push(newDaySticker)\n                //console.log(updatedDay)\n                \n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n\n    function handleNewDaySticker(newDaySticker){\n        console.log(newDaySticker)\n        //console.log(\"asdfasdf\")\n\n        let updatedUser = user \n        console.log(user.day_stickers)\n\n        let updatedUserDays = updateDaysForAddStickers(user.days, newDaySticker)\n        setDays(updatedUserDays)\n\n        updatedUser.days = updatedUserDays\n        setUser(updatedUser)\n\n    }\n\n    const months =[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\", \n    ]\n\n    //console.log(month)\n\n    function handleNextMonth(){\n        if(month === 11){\n            setMonth(0)\n        } else{\n        setMonth(month+1)\n        }\n    }\n    function handelPrevMonth(){\n        if (month === 0){\n            setMonth(11)\n        } else {\n        setMonth(month-1)\n        }\n    }\n\n    return(\n        <div className=\"Wholecalendar\">\n            <h2>Calendar Here!</h2>\n\n            <button onClick={handelPrevMonth}>  Prev </button>\n            <h3>{months[month]}</h3>\n            <button onClick={handleNextMonth}> Next </button>\n\n            <CalendarMaker daysSliced={daysSliced} \n            month={month} stickerMode={stickerMode}\n            stickerSelected={stickerSelected}\n            handleNewDaySticker={handleNewDaySticker}\n            />\n\n            <StickerApplyBox user={user} \n            stickerMode ={stickerMode} \n            setStickerMode={setStickerMode}\n            setStickerSelected={setStickerSelected}\n            />\n        </div>\n    )\n}\n\nexport default Calendar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["91","92","93","94","95","96"],"import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DayStickerRender from \"./dayRenders/DayStickerRender\";\nimport NewPostForm from \"./dayRenders/NewPostForm\";\nimport NewDayStickerForm from \"./dayRenders/NewDayStickerForm\";\nimport PostRender from \"./dayRenders/PostRender\";\n\n\nfunction Day({user, setUser}){\n\n    const params =useParams();\n\n    const [day, setDay] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [stickers, setStickers] = useState([]);\n    const [dayStickers, setDayStickers] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    function search(dayId, daysArray){\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayId) {\n                return daysArray[i];\n            }\n        }\n    }\n\n    // const resultObject = search(Number(params.id), user.days)\n    // //console.log(params.id)\n    // console.log(user.days)\n    // console.log(resultObject)\n\n    useEffect(() => {\n        const resultObject = search(Number(params.id), user.days)\n        //console.log(resultObject)\n        setDay(resultObject);\n        setPosts(resultObject.posts)\n        setStickers(resultObject.stickers)\n        setDayStickers(resultObject.day_stickers)\n        setIsLoaded(true);\n\n    },[params.id])\n\n    // useEffect(() => {\n    //     fetch(`http://localhost:3000/days/${params.id}`)\n    //     .then((r) => r.json())\n    //     .then((data) => {\n    //         setDay(data);\n    //         setPosts(data.posts)\n    //         setStickers(data.stickers)\n    //         setIsLoaded(true);\n    //     })\n    // },[params.id])\n\n\n    //The days update helper functions (there should be 4!)\n\n    function updateDaysForNewPost(dayId, daysArray, updatedPost){\n        const updatedDays = []\n        //console.log (daysArray, \"function array check \")\n        //console.log(dayId)\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == dayId) {\n                const updatedPostArray = daysArray[i].posts.concat(updatedPost)\n                //console.log(daysArray[i], \"the array in the if statment\")\n                //console.log(daysArray[i].posts, \"array.posts\")\n                //console.log(daysArray[i][date])\n                //console.log(updatedPostArray, \"what's being pushed into the day's post array\")\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        //console.log(updatedDays, \"function check \")\n        return updatedDays\n    }\n\n    function updateDaysForDeletePost(dayId, daysArray, updatedPosts){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == dayId) {\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPosts\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForAddStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == params.id) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                //console.log(updatedDay)\n                setDay(updatedDay)           //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForDeleteStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == params.id) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                setDay(updatedDay)                //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n    \n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n    \n    //Maping Data for calander render\n    const mappedStickers = stickers.map((sticker) => {\n        return <DayStickerRender sticker={sticker} key={randoNumber()}\n        handleDeleteSticker={handleDeleteSticker}\n        dayStickers ={dayStickers}\n        user = {user}\n        />\n    })\n\n    const mappedPosts = posts.map((post) => {\n        return <PostRender post={post} key={post.id} \n        onDeletePost={handleDeletePost}\n        handleEditPost={handleEditPost}\n        day={day}\n        />\n    })\n\n    //Post handles \n    function handleNewPost(newPost){\n        setPosts([...posts, newPost])\n        //setUser(user)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForNewPost(params.id, user.days, newPost)\n        //console.log(updatedUser, \"the user before the update\")\n        //console.log(updatedUser.days, \"usersdays before update\")\n        updatedUser.days = updatedDays\n        //console.log(updatedDays, \"updated days\")\n\n        setUser(updatedUser)\n\n    }\n\n    function handleDeletePost(removedPost){\n        \n        const updatedPosts = posts.filter((post) => (\n            post.id !== removedPost.id ? true : false\n        ))\n        setPosts(updatedPosts)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForDeletePost(params.id, user.days, updatedPosts)\n        updatedUser.days = updatedDays\n\n        setUser(updatedUser)\n    }\n    \n    function handleEditPost(updatedPost){\n        const updatedPostsArray = posts.map((post) => {\n            if (post.id === updatedPost.id){\n                return updatedPost;\n            } else {\n                return post\n            }\n        })\n        setPosts(updatedPostsArray)\n    }\n\n    //sticker Handles \n    function handleNewDaySticker(newStickerjoiner){\n        const updatedStickers = [...stickers, newStickerjoiner.sticker]\n        setStickers(updatedStickers)\n        //console.log(updatedStickers)\n\n        const newDayStickerJoiner = {\n            id: newStickerjoiner.id,\n            day_id: newStickerjoiner.day.id,\n            sticker_id: newStickerjoiner.sticker.id,\n        }\n        const updatedDayStickers = [...dayStickers, newDayStickerJoiner]\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n    function handleDeleteSticker(removedSticker, removedDaySticker){\n        //console.log(removedSticker)\n        //might need to make a custom loop for this one. \n        //temporatry work around is done \n\n        let wasRemoved = false\n        // let updatedStickers = []\n\n        // for (let i =0; i < stickers.length; i++){\n        // }\n\n        const updatedStickers = stickers.filter((sticker) => {\n            if ((sticker.id !== removedSticker.id) || (wasRemoved === true)){\n                return true \n            } else {\n                wasRemoved = true\n                return false \n            }\n        })\n        const updatedDayStickers = day.day_stickers.filter((joiner) => (\n            joiner.id !== removedDaySticker.id ? true : false\n        ))\n\n        setStickers(updatedStickers)\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForDeleteStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n\n    //Loading data block \n\n    if (!isLoaded) return <h2>Loading... or maybe you do not have access to this post.</h2>\n    else {\n    return(\n            <div>\n\n            This is the day page! \n            <h1>{day.date}</h1>\n            \n            <h2>Stickers: {mappedStickers} </h2>\n\n            <div> \n                <h2>Posts:</h2>\n                {mappedPosts}\n            </div>\n\n            <NewPostForm day={day} handleNewPost={handleNewPost}/>\n            <NewDayStickerForm day={day} handleNewDaySticker={handleNewDaySticker} userStickers={user.stickers}/>\n\n            <br></br>\n            <br></br>\n            </div>\n        )\n    }\n}\n\nexport default Day","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["97"],"\nfunction DayStickerRender({sticker, handleDeleteSticker, dayStickers}){\n\n    //THis is the day_sticker \n\n    let daySticker = dayStickers.find((dayS) => {\n        return (sticker.id === dayS.sticker_id)\n    })\n\n    console.log(dayStickers, \"daystickers\")\n\n    function handleDeleteClick(){\n        //console.log(post.id)\n        //const id = sticker.id.toString()\n        fetch(`http://localhost:3000/day_stickers/${daySticker.id}`, {\n            method: \"DELETE\",\n        });\n        handleDeleteSticker(sticker, daySticker);\n    }\n\n    return (\n        <div>\n            <img src={sticker.image}/>\n            <button onClick={handleDeleteClick}>Erase</button>\n        </div>\n        \n    )\n}\n\nexport default DayStickerRender","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["98"],"import React, {useState} from \"react\";\n\nfunction NewDaySticker({handleNewDaySticker, day, userStickers}){\n\n    const [formData, setFormData] = useState({\n        day_id: day.id,\n        sticker_id: 1,\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n        \n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newStickerjoiner => handleNewDaySticker(newStickerjoiner))\n    }\n\n    // <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\">\n    // <label for=\"male\">Male</label><br>\n\n    const userStickerMapped = userStickers.map((sticker) => {\n        return (\n                <div key={sticker.id}>\n                    <img src={sticker.image}/>\n                    <input type=\"radio\" name=\"sticker_id\" value={sticker.id} onChange={handleFormChange}/>\n                    <label >{sticker.name}</label>\n                </div> \n            )   \n    })\n\n    return (\n        <div>\n            <h2>Add a new Sticker! </h2>\n            <form onSubmit={handleSubmit}>\n                {userStickerMapped}\n\n                <button type=\"submit\">Apply the Sticker!</button>\n            </form>\n        </div>\n        \n    )\n}\n\nexport default NewDaySticker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["99","100"],"import { useState, useEffect }  from \"react\";\nimport EditBioForm from \"./userRenders/EditBioForm\"\n\nfunction User({user, setUser}){\n\n    const [editmode, setEditmode] = useState(false)\n\n    const mappedUserStickers = user.stickers.map((sticker) => {\n        return (\n                <div key={sticker.id}>\n                    <h4>{sticker.name}</h4>\n                    <img src={sticker.image}/>\n                </div>\n        )\n    })\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    function handleUserEdit(updatedUser){\n        //console.log(\"asdf\")\n        setUser(updatedUser)\n\n    }\n\n    return(\n        <div>\n            <h2>This is the User Page! </h2>\n\n            <h3>Username: {user.username}</h3>\n            <h3>Name: {user.name}</h3>\n            <h3>Bio: {user.bio}</h3>\n            <h3>Your Stickers:</h3>\n            {mappedUserStickers}\n\n            {(editmode === true)\n                ? <EditBioForm user={user} handleUserEdit={handleUserEdit} setEditmode={setEditmode}/>\n                :<button onClick={handleEditClick}>Edit Bio</button>\n            }\n\n        </div>\n    )\n}\n\nexport default User","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["101"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["102","103"],"//import { useState, useEffect }  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Day from \"../Day\";\nimport NewDaySticker from \"../dayRenders/NewDayStickerForm\";\n//import CalendarDay from \"./CalendarDay\"\n\n\nfunction CalendarMaker({daysSliced, month, stickerMode, stickerSelected, handleNewDaySticker}){\n\n    //console.log(daysSliced)\n    const monthC = month % 12\n\n\n    function handleDayStickerClick(event) {\n        const dayId = event.target.getAttribute(\"data-value\")\n        //console.log(event.target.getAttribute(\"data-value\"), \"dayID\")\n        //console.log(stickerSelected, \"stickerID\")\n        \n        const data = {\n            day_id: dayId,\n            sticker_id: stickerSelected,\n        }\n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n        .then(r => r.json())\n        .then(newDaySticker => handleNewDaySticker(newDaySticker))\n\n    }\n\n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n\n    //This is a helper function for daysMapped rendering, This deals with making each sticker show. \n    function postStickers(stickers){\n        const stickersMapped = stickers.map((sticker) => {\n            return <img src={sticker.image} alt={sticker.name} width=\"20\" height=\"20\" key={randoNumber()}/>\n        })\n        return <div>{stickersMapped}</div>\n    }\n\n    const daysMapped = daysSliced.map((day) => {\n        //return <CalendarDay day={day} key={day.id}/>\n\n        //First Part of is for the normal calendar redirects, \n        //This makes diffrenet calendar day boxes based on the attributes in the \"day\" object\n        if (stickerMode === false) {  \n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                        <br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                    </div>\n                    </Link>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">{day.date.slice(0,5)}</div>\n                    </Link>\n                )\n            }\n        } else {\n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                        <br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                    </div>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}\n                    </div>\n                )\n            }\n\n        }\n\n    })\n\n    function weekdayNames(){\n        return (\n            <div className=\"weekdays\">\n                <div className=\"calendarDayLabels\">Sun</div>\n                <div className=\"calendarDayLabels\">Mon</div>\n                <div className=\"calendarDayLabels\">Tue</div>\n                <div className=\"calendarDayLabels\">Wed</div>\n                <div className=\"calendarDayLabels\">Thu</div>\n                <div className=\"calendarDayLabels\">Fri</div>\n                <div className=\"calendarDayLabels\">Sat</div>\n            </div>\n        )\n    }\n\n    if (monthC === 0){\n    return (\n       \n        <div className=\"calendar\">\n\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n        </div>\n        \n    )} else if (monthC === 1){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 2){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 3){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC ===4){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 5){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 6){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 7){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 8){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 9){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 10){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 11){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }\n        else {\n        return <div> loading not yet coded yet</div>\n    }\n\n    \n\n}\n\nexport default CalendarMaker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["104","105","106"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["107"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["108"],"function UserStickers({sticker}){\n\n    return (\n        <div> \n            <h3>{sticker.name}</h3>\n            <input type=\"radio\" name=\"choice\" value={sticker.id}/>\n            <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":2,"column":21,"nodeType":"115","messageId":"116","endLine":2,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":55,"column":33,"nodeType":"120","messageId":"121","endLine":55,"endColumn":35},{"ruleId":"113","severity":1,"message":"117","line":2,"column":21,"nodeType":"115","messageId":"116","endLine":2,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":41,"column":7,"nodeType":"124","endLine":41,"endColumn":18,"suggestions":"125"},{"ruleId":"118","severity":1,"message":"119","line":63,"column":33,"nodeType":"120","messageId":"121","endLine":63,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":84,"column":33,"nodeType":"120","messageId":"121","endLine":84,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":99,"column":33,"nodeType":"120","messageId":"121","endLine":99,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":117,"column":33,"nodeType":"120","messageId":"121","endLine":117,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":23,"column":13,"nodeType":"128","endLine":23,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":38,"column":21,"nodeType":"128","endLine":38,"endColumn":47},{"ruleId":"113","severity":1,"message":"129","line":1,"column":20,"nodeType":"115","messageId":"116","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"127","line":12,"column":21,"nodeType":"128","endLine":12,"endColumn":47},{"ruleId":"113","severity":1,"message":"130","line":20,"column":14,"nodeType":"115","messageId":"116","endLine":20,"endColumn":19},{"ruleId":"113","severity":1,"message":"131","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":11},{"ruleId":"113","severity":1,"message":"132","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":21},{"ruleId":"113","severity":1,"message":"133","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":2,"column":21,"nodeType":"115","messageId":"116","endLine":2,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":14,"column":1,"nodeType":"136","messageId":"137","endLine":14,"endColumn":55},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["140"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'sleep' is defined but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [params.id, user.days]",{"range":"143","text":"144"},[1320,1331],"[params.id, user.days]"]