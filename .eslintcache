[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js":"19","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js":"20","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js":"21","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js":"22"},{"size":541,"mtime":1612363761833,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1612300184997,"results":"25","hashOfConfig":"24"},{"size":1669,"mtime":1612800767078,"results":"26","hashOfConfig":"24"},{"size":3841,"mtime":1612627465862,"results":"27","hashOfConfig":"24"},{"size":9019,"mtime":1612732872667,"results":"28","hashOfConfig":"24"},{"size":753,"mtime":1612817730091,"results":"29","hashOfConfig":"24"},{"size":1024,"mtime":1612386478562,"results":"30","hashOfConfig":"24"},{"size":1592,"mtime":1612574091793,"results":"31","hashOfConfig":"24"},{"size":1646,"mtime":1612407932798,"results":"32","hashOfConfig":"24"},{"size":1619,"mtime":1612817864276,"results":"33","hashOfConfig":"24"},{"size":2093,"mtime":1612818115785,"results":"34","hashOfConfig":"24"},{"size":1325,"mtime":1612407704453,"results":"35","hashOfConfig":"24"},{"size":3323,"mtime":1612650587780,"results":"36","hashOfConfig":"24"},{"size":11685,"mtime":1612628084171,"results":"37","hashOfConfig":"24"},{"size":413,"mtime":1612467783688,"results":"38","hashOfConfig":"24"},{"size":778,"mtime":1612716272183,"results":"39","hashOfConfig":"24"},{"size":1012,"mtime":1612564364649,"results":"40","hashOfConfig":"24"},{"size":371,"mtime":1612553192585,"results":"41","hashOfConfig":"24"},{"size":513,"mtime":1612650691623,"results":"42","hashOfConfig":"24"},{"size":2428,"mtime":1612725915579,"results":"43","hashOfConfig":"24"},{"size":1754,"mtime":1612815683227,"results":"44","hashOfConfig":"24"},{"size":540,"mtime":1612805960527,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pp5roh",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["99","100"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["101","102","103"],"//import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CalendarMaker from \"./CalendarRenders/CalendarMaker\"\nimport StickerApplyBox from \"./CalendarRenders/StickerApplyBox\"\n\nimport '../App.css'\nimport { useState } from \"react\";\n\n\nfunction Calendar({ month, setMonth, user, setUser}){\n\n    const [stickerMode, setStickerMode] = useState(false)\n    const [stickerSelected, setStickerSelected] = useState(null)\n    const [days, setDays ] =useState(user.days)\n    //console.log(user.days , \"userdays\")\n    //console.log(stickerSelected)\n\n    const sliceMonthStart=[0,31,59,90,120,151,181,212,243,273,304,334]\n    const sliceMonthEnd =[31,59,90,120,151,181,212,243,273,304,334,365]\n\n    //const [days, setDays] = useState([user.days])\n\n    const daysOrdered = days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n    \n    const daysSliced = daysOrdered.slice(sliceMonthStart[month], sliceMonthEnd[month])\n\n    //Moved to CalendarMaker.js! Needed to more dynamic\n    // const daysMapped = daysSliced.map((day) => {\n    //     return (\n    //         <Link to={`days/${day.id}`} key={day.id}>\n    //             <div > \n    //                 <h4>{day.date.slice(0,5)}</h4>\n    //             </div>\n    //         </Link>\n    //     )\n    // })\n\n    // const daysMappedStickerMode = daysSliced.map((day) => {\n    //     return (\n    //             <div key={day.id}> \n    //                 <h4>{day.date.slice(0,5)}</h4>\n    //             </div>\n    //     )\n    // })\n\n\n    function updateDaysForAddStickers(daysArray, newDaySticker){\n        const updatedDays = []\n\n        let dayID = newDaySticker.day.id\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == dayID) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers.push(newDaySticker.sticker)\n                updatedDay.day_stickers.push(newDaySticker)\n                //console.log(updatedDay)\n                \n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n\n    function handleNewDaySticker(newDaySticker){\n        console.log(newDaySticker)\n        //console.log(\"asdfasdf\")\n\n        let updatedUser = user \n        console.log(user.day_stickers)\n\n        let updatedUserDays = updateDaysForAddStickers(user.days, newDaySticker)\n        setDays(updatedUserDays)\n\n        updatedUser.days = updatedUserDays\n        setUser(updatedUser)\n\n    }\n\n    const months =[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\", \n    ]\n\n    //console.log(month)\n\n    function handleNextMonth(){\n        if(month === 11){\n            setMonth(0)\n        } else{\n        setMonth(month+1)\n        }\n    }\n    function handelPrevMonth(){\n        if (month === 0){\n            setMonth(11)\n        } else {\n        setMonth(month-1)\n        }\n    }\n\n    return(\n        <div className=\"Wholecalendar\">\n            <h2>Calendar Here!</h2>\n\n            <button onClick={handelPrevMonth}>  Prev </button>\n            <h3>{months[month]}</h3>\n            <button onClick={handleNextMonth}> Next </button>\n\n            <CalendarMaker daysSliced={daysSliced} \n            month={month} stickerMode={stickerMode}\n            stickerSelected={stickerSelected}\n            handleNewDaySticker={handleNewDaySticker}\n            />\n\n            <StickerApplyBox user={user} \n            stickerMode ={stickerMode} \n            setStickerMode={setStickerMode}\n            setStickerSelected={setStickerSelected}\n            />\n        </div>\n    )\n}\n\nexport default Calendar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["104"],"import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DayStickerRender from \"./dayRenders/DayStickerRender\";\nimport NewPostForm from \"./dayRenders/NewPostForm\";\nimport NewDayStickerForm from \"./dayRenders/NewDayStickerForm\";\nimport PostRender from \"./dayRenders/PostRender\";\n\n\nfunction Day({user, setUser}){\n\n    const params =useParams();\n\n    const [day, setDay] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [stickers, setStickers] = useState([]);\n    const [dayStickers, setDayStickers] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    function search(dayId, daysArray){\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayId) {\n                return daysArray[i];\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        const resultObject = search(Number(params.id), user.days)\n        //console.log(resultObject)\n        setDay(resultObject);\n        setPosts(resultObject.posts)\n        setStickers(resultObject.stickers)\n        setDayStickers(resultObject.day_stickers)\n        setIsLoaded(true);\n\n\n\n\n    },[params.id])\n\n\n    //This step might be inefficient, probaly better to pull the daysOrdered from App.js  \n    const daysOrdered = user.days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n\n\n    //These steps here are needed tho.... remeber index starts at 0 but % messes up the logic a bit \n    const currentIndex = daysOrdered.indexOf(day);\n    const nextIndex = ((currentIndex + 1) % daysOrdered.length);\n    const nextDay = daysOrdered[nextIndex]\n    //console.log(nextDay.id, \"wut\")\n\n    let prevIndex = 10 \n    if(currentIndex === 0){\n        prevIndex = daysOrdered.length -1\n    } else {\n        prevIndex = (currentIndex - 1) % (daysOrdered.length )\n     } \n    //console.log(currentIndex, prevIndex) \n    const prevDay = daysOrdered[prevIndex]\n    //console.log(prevDay.id, \"tuw\")\n    \n    \n    \n\n\n\n    //The days update helper functions (there should be 4!)\n\n    function updateDaysForNewPost(dayId, daysArray, updatedPost){\n        const updatedDays = []\n        //console.log (daysArray, \"function array check \")\n        //console.log(dayId)\n\n        for (let i=0; i < daysArray.length; i++) {\n            //console.log(daysArray[i].id, dayId)\n            if (daysArray[i].id === Number(dayId)) {\n                const updatedPostArray = daysArray[i].posts.concat(updatedPost)\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        //console.log(updatedDays, \"function check \")\n        return updatedDays\n    }\n\n    function updateDaysForDeletePost(dayId, daysArray, updatedPosts){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(dayId)) {\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPosts\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForAddStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                //console.log(updatedDay)\n                setDay(updatedDay)           //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForDeleteStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                setDay(updatedDay)                //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n    \n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n    \n    //Maping Data for calander render\n    const mappedStickers = stickers.map((sticker) => {\n        return <DayStickerRender sticker={sticker} key={randoNumber()}\n        handleDeleteSticker={handleDeleteSticker}\n        dayStickers ={dayStickers}\n        user = {user}\n        />\n    })\n\n    const mappedPosts = posts.map((post) => {\n        return <PostRender post={post} key={post.id} \n        onDeletePost={handleDeletePost}\n        handleEditPost={handleEditPost}\n        day={day}\n        />\n    })\n\n    //Post handles \n    function handleNewPost(newPost){\n        setPosts([...posts, newPost])\n        //setUser(user)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForNewPost(params.id, user.days, newPost)\n        //console.log(updatedUser, \"the user before the update\")\n        //console.log(updatedUser.days, \"usersdays before update\")\n        updatedUser.days = updatedDays\n        //console.log(updatedDays, \"updated days\")\n\n        setUser(updatedUser)\n\n    }\n\n    function handleDeletePost(removedPost){\n        \n        const updatedPosts = posts.filter((post) => (\n            post.id !== removedPost.id ? true : false\n        ))\n        setPosts(updatedPosts)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForDeletePost(params.id, user.days, updatedPosts)\n        updatedUser.days = updatedDays\n\n        setUser(updatedUser)\n    }\n    \n    function handleEditPost(updatedPost){\n        const updatedPostsArray = posts.map((post) => {\n            if (post.id === updatedPost.id){\n                return updatedPost;\n            } else {\n                return post\n            }\n        })\n        setPosts(updatedPostsArray)\n    }\n\n    //sticker Handles \n    function handleNewDaySticker(newStickerjoiner){\n        const updatedStickers = [...stickers, newStickerjoiner.sticker]\n        setStickers(updatedStickers)\n        //console.log(updatedStickers)\n\n        const newDayStickerJoiner = {\n            id: newStickerjoiner.id,\n            day_id: newStickerjoiner.day.id,\n            sticker_id: newStickerjoiner.sticker.id,\n        }\n        const updatedDayStickers = [...dayStickers, newDayStickerJoiner]\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n    function handleDeleteSticker(removedSticker, removedDaySticker){\n        //console.log(removedSticker)\n        //might need to make a custom loop for this one. \n        //temporatry work around is done \n\n        let wasRemoved = false\n        // let updatedStickers = []\n\n        // for (let i =0; i < stickers.length; i++){\n        // }\n\n        const updatedStickers = stickers.filter((sticker) => {\n            if ((sticker.id !== removedSticker.id) || (wasRemoved === true)){\n                return true \n            } else {\n                wasRemoved = true\n                return false \n            }\n        })\n        const updatedDayStickers = day.day_stickers.filter((joiner) => (\n            joiner.id !== removedDaySticker.id ? true : false\n        ))\n\n        setStickers(updatedStickers)\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForDeleteStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n\n    //Loading data block \n\n    if (!isLoaded) return <h2>Loading... or maybe you do not have access to this post.</h2>\n    else {\n    return(\n            <div>\n\n            This is the day page! \n            <h1>{day.date}</h1>\n            <Link to={`/days/${prevDay.id}`}><button >Prev</button></Link>\n            <Link to={`/days/${nextDay.id}`}><button >Next</button></Link>\n            \n            <h2>Stickers: {mappedStickers} </h2>\n\n            <div> \n                <h2>Posts:</h2>\n                {mappedPosts}\n            </div>\n\n            <NewPostForm day={day} handleNewPost={handleNewPost}/>\n            <NewDayStickerForm day={day} handleNewDaySticker={handleNewDaySticker} userStickers={user.stickers}/>\n\n            <br></br>\n            <br></br>\n            </div>\n        )\n    }\n}\n\nexport default Day","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["105"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["106"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["107"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["108"],"import { useState }  from \"react\";\n\nfunction SignUp (){\n\n    //let date = new Date(Date.parse('2020/01/01'))\n    // let date = new Date(\"2020-01-02\")\n\n    // console.log(date)\n    // date.setDate(date.getDate + 1)\n    // console.log(date)\n    // // console.log(date)\n\n    // let today = new Date(Date.parse('2021/01/01'));\n    // let dd = String(today.getDate()).padStart(2, '0');\n    // let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    // let yyyy = today.getFullYear();\n    // let formated = mm + '/' + dd + '/' + yyyy;\n    //console.log(formated)\n    \n    function sleep(milliseconds) {\n        const date = Date.now();\n        let currentDate = null;\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < milliseconds);\n      }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        bio: \"\",\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n\n        fetch(`http://localhost:3000/users`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newUser => handleNewPost(newUser))\n    }\n\n\n    function handleNewPost(newUser){\n\n        let today = new Date(Date.parse('2021/01/01'));\n\n        for (let i=0; i < 365; i++) {\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); \n            let yyyy = today.getFullYear();\n            let formatedDate = mm + '/' + dd + '/' + yyyy;\n            today.setHours(today.getHours() + 24)\n\n            let data = {\n                user_id: newUser.id,\n                date: formatedDate\n            }\n            fetch(`http://localhost:3000/days`,{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n                })\n            .then(r => r.json())\n            //then(newDays =>)\n\n            // sleep(1000)\n        }\n\n    }\n\n\n    return (\n        <div>\n            <h2>New User</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"\n                value={formData.username}\n                onChange={handleFormChange}\n                />\n                <input type=\"text\" name=\"password\" placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleFormChange}\n                />\n                <input type=\"text\" name=\"name\" placeholder=\"Name\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <input type=\"textarea\" name=\"bio\" placeholder=\"About Yourself!\"\n                value={formData.bio}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Make an Account </button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default SignUp ","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["109","110"],"//import { useState, useEffect }  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Day from \"../Day\";\nimport NewDaySticker from \"../dayRenders/NewDayStickerForm\";\n//import CalendarDay from \"./CalendarDay\"\n\n\nfunction CalendarMaker({daysSliced, month, stickerMode, stickerSelected, handleNewDaySticker}){\n\n    //console.log(daysSliced)\n    const monthC = month % 12\n\n\n    function handleDayStickerClick(event) {\n        const dayId = event.target.getAttribute(\"data-value\")\n        //console.log(event.target.getAttribute(\"data-value\"), \"dayID\")\n        //console.log(stickerSelected, \"stickerID\")\n        \n        const data = {\n            day_id: dayId,\n            sticker_id: stickerSelected,\n        }\n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n        .then(r => r.json())\n        .then(newDaySticker => handleNewDaySticker(newDaySticker))\n\n    }\n\n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n\n    //This is a helper function for daysMapped rendering, This deals with making each sticker show. \n    function postStickers(stickers){\n        const stickersMapped = stickers.map((sticker) => {\n            return <img src={sticker.image} alt={sticker.name} width=\"20\" height=\"20\" key={randoNumber()}/>\n        })\n        return <div>{stickersMapped}</div>\n    }\n\n    const daysMapped = daysSliced.map((day) => {\n        //return <CalendarDay day={day} key={day.id}/>\n\n        //First Part of is for the normal calendar redirects, \n        //This makes diffrenet calendar day boxes based on the attributes in the \"day\" object\n        if (stickerMode === false) {  \n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                        <br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                    </div>\n                    </Link>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">{day.date.slice(0,5)}</div>\n                    </Link>\n                )\n            }\n        } else {\n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                        <br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                    </div>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}\n                    </div>\n                )\n            }\n\n        }\n\n    })\n\n    function weekdayNames(){\n        return (\n            <div className=\"weekdays\">\n                <div className=\"calendarDayLabels\">Sun</div>\n                <div className=\"calendarDayLabels\">Mon</div>\n                <div className=\"calendarDayLabels\">Tue</div>\n                <div className=\"calendarDayLabels\">Wed</div>\n                <div className=\"calendarDayLabels\">Thu</div>\n                <div className=\"calendarDayLabels\">Fri</div>\n                <div className=\"calendarDayLabels\">Sat</div>\n            </div>\n        )\n    }\n\n    if (monthC === 0){\n    return (\n       \n        <div className=\"calendar\">\n\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n        </div>\n        \n    )} else if (monthC === 1){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 2){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 3){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC ===4){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 5){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 6){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 7){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 8){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 9){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 10){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 11){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }\n        else {\n        return <div> loading not yet coded yet</div>\n    }\n\n    \n\n}\n\nexport default CalendarMaker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["111","112","113"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["114"],"import { useParams, Link } from \"react-router-dom\";\n\nfunction NavBar({user, setUser}){\n\n    function handleLogOut(){\n\n        setUser(null)\n        console.log(user)\n    }\n\n    if (user){\n        return (\n            <div>Nav Bar for user\n            <Link to={`/`}>Home</Link>\n            <Link to={`/calendar`}>MyCalendar</Link>\n            <Link to={`/users/${user.id}`}>MyPage</Link>\n            <Link to={`/`}><button onClick={handleLogOut}>Log out</button></Link>\n        </div>    \n        )\n    } else {\n        return (\n            <div>NavBar for not Logined \n\n                <Link to={`/`}>Home</Link>\n                {}\n                {/* <Link to={`/users/${user.id}`}>User</Link> */}\n                \n            </div>\n        )\n    }\n\n\n}\n\nexport default NavBar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["115"],"function UserStickers({sticker}){\n\n    return (\n        <div> \n            <h3>{sticker.name}</h3>\n            <input type=\"radio\" name=\"choice\" value={sticker.id}/>\n            <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js",["116","117","118"],"import React, { useState, useEffect } from \"react\";\n\nfunction LoginPage ({user, setUser}){\n\n    const [users, setUsers] = useState(null)\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    useEffect(() => { \n        fetch(`http://localhost:3000/users/`)\n        .then(resp => resp.json())\n        .then(data => {\n        setUsers(data)\n        \n        })\n    }, [])\n\n    function handleLogin(event){\n        event.preventDefault()\n        console.log(formData)\n\n        for(let i = 0; i < users.length; i++){\n            let cond1 = (users[i].username === formData.username)\n            let cond2 = (users[i].password === formData.password)\n            if (cond1 && cond2){\n                \n                setUser(users[i])\n                \n            }\n        }\n\n    }\n\n    function loginSucess(){\n        alert(\"Successful Login\")\n    }\n\n    function myFunction() {\n        alert(\"I am an alert box!\");\n      }\n\n\n    if (!users) {\n        return <h1> Loading fake Auth</h1>\n    } else {\n        return (\n            <div>\n                <h1> Login to your JournalSoft</h1>\n                <form onSubmit={handleLogin}>\n                    <h4>Login</h4>\n                    <label >Username</label>\n                    <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" value={formData.username}\n                     onChange={handleFormChange}/>  \n                    <br/>\n                    <label >Password</label>\n                    <input type=\"text\" placeholder=\"Enter Password\" name=\"password\" value={formData.password}\n                     onChange={handleFormChange}/>  \n                    <br/>\n                    <button type=\"submit\">Login</button>\n                </form>\n                {/* <button onClick={myFunction}>Try it</button> */}\n            </div>\n        )\n    }\n\n}\n\nexport default LoginPage\n\n{/* <div> \n<h1>Login to your JournalSoft</h1>\n<form >\n\n    <h4 id=\"login\">Login</h4>\n    <label for=\"email\"><b>Username</b></label>\n    <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" required>\n\n    <button type=\"submit\" class=\"btn\">Login</button>\n    <button type=\"button\" class=\"btn-cancel\" onclick=\"closeForm()\">Close</button>\n\n</form>\n</div> */}","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js",["119"],"function StickerCard({sticker, onDeleteSticker}){\n\n    function onDeleteClick(event){\n\n        //console.log(post.id)\n        const id = sticker.id.toString()\n        fetch(`http://localhost:3000/stickers/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeleteSticker(sticker);\n    }\n\n\n    return (\n        <div key={sticker.id}>\n        <h4>{sticker.name}</h4>\n        <img src={sticker.image} width=\"80\" height=\"80\"/>\n        <button onClick={onDeleteClick}>Delete</button>\n        </div>\n    )\n\n}\n\nexport default StickerCard",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":2,"column":21,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":55,"column":33,"nodeType":"131","messageId":"132","endLine":55,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":40,"column":7,"nodeType":"135","endLine":40,"endColumn":18,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":23,"column":13,"nodeType":"139","endLine":23,"endColumn":62},{"ruleId":"137","severity":1,"message":"138","line":38,"column":21,"nodeType":"139","endLine":38,"endColumn":70},{"ruleId":"124","severity":1,"message":"140","line":1,"column":20,"nodeType":"126","messageId":"127","endLine":1,"endColumn":29},{"ruleId":"124","severity":1,"message":"141","line":20,"column":14,"nodeType":"126","messageId":"127","endLine":20,"endColumn":19},{"ruleId":"124","severity":1,"message":"142","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":11},{"ruleId":"124","severity":1,"message":"143","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":21},{"ruleId":"124","severity":1,"message":"144","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":2,"column":21,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":14,"column":1,"nodeType":"147","messageId":"148","endLine":14,"endColumn":55},{"ruleId":"124","severity":1,"message":"149","line":44,"column":14,"nodeType":"126","messageId":"127","endLine":44,"endColumn":25},{"ruleId":"124","severity":1,"message":"150","line":48,"column":14,"nodeType":"126","messageId":"127","endLine":48,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":80,"column":1,"nodeType":"147","messageId":"148","endLine":92,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":17,"column":9,"nodeType":"139","endLine":17,"endColumn":58},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'sleep' is defined but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'loginSucess' is defined but never used.","'myFunction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [params.id, user.days]",{"range":"156","text":"157"},[1163,1174],"[params.id, user.days]"]