[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js":"19","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js":"20","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js":"21","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js":"22","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Notes.js":"23","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NoteCard.js":"24","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NewNoteForm.js":"25","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/EditNoteForm.js":"26","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Search.js":"27","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/SearchTermSet.js":"28","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/ResultCard.js":"29"},{"size":541,"mtime":1612363761833,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1612300184997,"results":"32","hashOfConfig":"31"},{"size":2287,"mtime":1613281070689,"results":"33","hashOfConfig":"31"},{"size":3679,"mtime":1613092075977,"results":"34","hashOfConfig":"31"},{"size":10174,"mtime":1613099783099,"results":"35","hashOfConfig":"31"},{"size":776,"mtime":1613099827363,"results":"36","hashOfConfig":"31"},{"size":1012,"mtime":1613267661796,"results":"37","hashOfConfig":"31"},{"size":1597,"mtime":1612924793207,"results":"38","hashOfConfig":"31"},{"size":1646,"mtime":1612407932798,"results":"39","hashOfConfig":"31"},{"size":1709,"mtime":1613097902562,"results":"40","hashOfConfig":"31"},{"size":2860,"mtime":1613092337720,"results":"41","hashOfConfig":"31"},{"size":1624,"mtime":1613093991934,"results":"42","hashOfConfig":"31"},{"size":5135,"mtime":1612910683515,"results":"43","hashOfConfig":"31"},{"size":11939,"mtime":1613146349408,"results":"44","hashOfConfig":"31"},{"size":413,"mtime":1612467783688,"results":"45","hashOfConfig":"31"},{"size":2151,"mtime":1613281108923,"results":"46","hashOfConfig":"31"},{"size":963,"mtime":1613280347139,"results":"47","hashOfConfig":"31"},{"size":865,"mtime":1613076959700,"results":"48","hashOfConfig":"31"},{"size":560,"mtime":1612991483460,"results":"49","hashOfConfig":"31"},{"size":2620,"mtime":1612834941553,"results":"50","hashOfConfig":"31"},{"size":1943,"mtime":1613092983584,"results":"51","hashOfConfig":"31"},{"size":620,"mtime":1613091775184,"results":"52","hashOfConfig":"31"},{"size":1423,"mtime":1613167403931,"results":"53","hashOfConfig":"31"},{"size":933,"mtime":1613166491128,"results":"54","hashOfConfig":"31"},{"size":1618,"mtime":1612924518627,"results":"55","hashOfConfig":"31"},{"size":1654,"mtime":1613167050688,"results":"56","hashOfConfig":"31"},{"size":1209,"mtime":1613281098778,"results":"57","hashOfConfig":"31"},{"size":405,"mtime":1613267324403,"results":"58","hashOfConfig":"31"},{"size":411,"mtime":1613271861818,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"pp5roh",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["131","132"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["133","134","135"],"//import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CalendarMaker from \"./CalendarRenders/CalendarMaker\"\nimport StickerApplyBox from \"./CalendarRenders/StickerApplyBox\"\n\nimport '../App.css'\nimport { useState } from \"react\";\n\n\nfunction Calendar({ month, setMonth, user, setUser}){\n\n    const [stickerMode, setStickerMode] = useState(false)\n    const [stickerSelected, setStickerSelected] = useState(null)\n    const [days, setDays ] =useState(user.days)\n    //console.log(user.days , \"userdays\")\n    //console.log(stickerSelected)\n\n    const sliceMonthStart=[0,31,59,90,120,151,181,212,243,273,304,334]\n    const sliceMonthEnd =[31,59,90,120,151,181,212,243,273,304,334,365]\n\n    //const [days, setDays] = useState([user.days])\n\n    const daysOrdered = days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n    \n    const daysSliced = daysOrdered.slice(sliceMonthStart[month], sliceMonthEnd[month])\n\n    function updateDaysForAddStickers(daysArray,newDayStickerJoiner, newDaySticker ){\n        const updatedDays = []\n\n        let dayID = newDaySticker.day.id\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayID) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers.push(newDaySticker.sticker)\n                updatedDay.day_stickers.push(newDayStickerJoiner)\n                console.log(updatedDay)\n                \n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n\n\n    function handleNewDaySticker(newDaySticker){\n\n        const newDayStickerJoiner = {\n            id: newDaySticker.id,\n            day_id: newDaySticker.day.id,\n            sticker_id: newDaySticker.sticker.id,\n        }\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, newDayStickerJoiner, newDaySticker)\n        setDays(updatedDays)\n        updatedUser.days = updatedDays\n        \n        setUser(updatedUser)\n\n    }\n\n    const months =[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\", \n    ]\n\n    //console.log(month)\n\n    function handleNextMonth(){\n        if(month === 11){\n            setMonth(0)\n        } else{\n        setMonth(month+1)\n        }\n    }\n    function handelPrevMonth(){\n        if (month === 0){\n            setMonth(11)\n        } else {\n        setMonth(month-1)\n        }\n    }\n\n    return(\n        \n        <div class=\"grid-container\">\n\n            <div className=\"Month-Name\">\n                <button className=\"cal-buttons\" onClick={handelPrevMonth}>  Prev </button>\n                \n                    <a>{months[month]}</a>\n                \n                <button className=\"cal-buttons\" onClick={handleNextMonth}> Next </button>\n            </div>\n\n            <div className=\"Calendar\">\n            <CalendarMaker daysSliced={daysSliced} \n            month={month} stickerMode={stickerMode}\n            stickerSelected={stickerSelected}\n            handleNewDaySticker={handleNewDaySticker}\n            />\n            </div>\n\n            <div className=\"Edit-Box\">\n            <StickerApplyBox user={user} \n            stickerMode ={stickerMode} \n            setStickerMode={setStickerMode}\n            setStickerSelected={setStickerSelected}\n            />\n            \n            </div>\n            <div><br/></div>\n        </div>\n        \n    )\n}\n\nexport default Calendar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["136","137","138"],"import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DayStickerRender from \"./dayRenders/DayStickerRender\";\nimport NewPostForm from \"./dayRenders/NewPostForm\";\nimport NewDayStickerForm from \"./dayRenders/NewDayStickerForm\";\nimport PostRender from \"./dayRenders/PostRender\";\n\nimport '../css/Day.css';\n\nfunction Day({user, setUser}){\n\n    const params =useParams();\n\n    const [day, setDay] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [stickers, setStickers] = useState([]);\n    const [dayStickers, setDayStickers] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    function search(dayId, daysArray){\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayId) {\n                return daysArray[i];\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        const resultObject = search(Number(params.id), user.days)\n        //console.log(resultObject)\n        setDay(resultObject);\n        setPosts(resultObject.posts)\n        setStickers(resultObject.stickers)\n        setDayStickers(resultObject.day_stickers)\n        setIsLoaded(true);\n\n    },[params.id])\n\n\n    //This step might be inefficient, probaly better to pull the daysOrdered from App.js  \n    const daysOrdered = user.days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n\n\n    //These steps here are needed tho.... remeber index starts at 0 but % messes up the logic a bit \n    const currentIndex = daysOrdered.indexOf(day);\n    const nextIndex = ((currentIndex + 1) % daysOrdered.length);\n    const nextDay = daysOrdered[nextIndex]\n    //console.log(nextDay.id, \"wut\")\n\n    let prevIndex = 10 \n    if(currentIndex === 0){\n        prevIndex = daysOrdered.length -1\n    } else {\n        prevIndex = (currentIndex - 1) % (daysOrdered.length )\n     } \n    //console.log(currentIndex, prevIndex) \n    const prevDay = daysOrdered[prevIndex]\n    //console.log(prevDay.id, \"tuw\")\n    \n    \n    \n\n\n\n    //The days update helper functions (there should be 4!)\n\n    function updateDaysForNewPost(dayId, daysArray, updatedPost){\n        const updatedDays = []\n        //console.log (daysArray, \"function array check \")\n        //console.log(dayId)\n\n        for (let i=0; i < daysArray.length; i++) {\n            //console.log(daysArray[i].id, dayId)\n            if (daysArray[i].id === Number(dayId)) {\n                const updatedPostArray = daysArray[i].posts.concat(updatedPost)\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        //console.log(updatedDays, \"function check \")\n        return updatedDays\n    }\n\n    function updateDaysForDeletePost(dayId, daysArray, updatedPosts){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(dayId)) {\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPosts\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForEditPost(daysArray, updatedPostsArray){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostsArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n\n    }\n\n    function updateDaysForAddStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                //console.log(updatedDay)\n                setDay(updatedDay)           //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n    function updateDaysForDeleteStickers(daysArray, updatedStickers, updatedDayStickers){\n        const updatedDays = []\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === Number(params.id)) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers = updatedStickers\n                updatedDay.day_stickers = updatedDayStickers\n                setDay(updatedDay)                //might need this for bug\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n    \n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n    \n    //Maping Data for calander render\n    const mappedStickers = stickers.map((sticker) => {\n        return <DayStickerRender sticker={sticker} key={randoNumber()}\n        handleDeleteSticker={handleDeleteSticker}\n        dayStickers ={dayStickers}\n        user = {user}\n        />\n    })\n\n    const mappedPosts = posts.map((post) => {\n        return <PostRender post={post} key={post.id} \n        onDeletePost={handleDeletePost}\n        handleEditPost={handleEditPost}\n        day={day}\n        />\n    })\n\n    //Post handles \n    function handleNewPost(newPost){\n        setPosts([...posts, newPost])\n        //setUser(user)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForNewPost(params.id, user.days, newPost)\n        //console.log(updatedUser, \"the user before the update\")\n        //console.log(updatedUser.days, \"usersdays before update\")\n        updatedUser.days = updatedDays\n        //console.log(updatedDays, \"updated days\")\n\n        setUser(updatedUser)\n\n    }\n\n    function handleDeletePost(removedPost){\n        \n        const updatedPosts = posts.filter((post) => (\n            post.id !== removedPost.id ? true : false\n        ))\n        setPosts(updatedPosts)\n\n        let updatedUser = user \n        const updatedDays = updateDaysForDeletePost(params.id, user.days, updatedPosts)\n        updatedUser.days = updatedDays\n\n        setUser(updatedUser)\n    }\n    \n    function handleEditPost(updatedPost){\n        const updatedPostsArray = posts.map((post) => {\n            if (post.id === updatedPost.id){\n                return updatedPost;\n            } else {\n                return post\n            }\n        })\n        setPosts(updatedPostsArray) //This sets the posts for the day not the whole user!\n\n        let updatedUser = user \n        const updatedDays = updateDaysForEditPost(user.days, updatedPostsArray)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n        //console.log(user, \"adf\")\n    }\n\n    //sticker Handles \n    function handleNewDaySticker(newStickerjoiner){\n        const updatedStickers = [...stickers, newStickerjoiner.sticker]\n        setStickers(updatedStickers)\n        //console.log(updatedStickers)\n\n        const newDayStickerJoiner = {\n            id: newStickerjoiner.id,\n            day_id: newStickerjoiner.day.id,\n            sticker_id: newStickerjoiner.sticker.id,\n        }\n        const updatedDayStickers = [...dayStickers, newDayStickerJoiner]\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n    function handleDeleteSticker(removedSticker, removedDaySticker){\n        //console.log(removedSticker)\n        //might need to make a custom loop for this one. \n        //temporatry work around is done \n\n        let wasRemoved = false\n        // let updatedStickers = []\n\n        // for (let i =0; i < stickers.length; i++){\n        // }\n\n        const updatedStickers = stickers.filter((sticker) => {\n            if ((sticker.id !== removedSticker.id) || (wasRemoved === true)){\n                return true \n            } else {\n                wasRemoved = true\n                return false \n            }\n        })\n        const updatedDayStickers = day.day_stickers.filter((joiner) => (\n            joiner.id !== removedDaySticker.id ? true : false\n        ))\n\n        setStickers(updatedStickers)\n        setDayStickers(updatedDayStickers)\n\n        let updatedUser = user\n        const updatedDays = updateDaysForDeleteStickers(user.days, updatedStickers, updatedDayStickers)\n        updatedUser.days = updatedDays\n        setUser(updatedUser)\n    }\n\n\n    //Loading data block \n\n    if (!isLoaded) return <h2>Loading... or maybe you do not have access to this post.</h2>\n    else {\n    return(\n            <div className=\"grid-container-day\">\n\n\n            <div class=\"Info\">\n                <div class=\"Date\">\n                    <Link to={`/days/${prevDay.id}`}><button >Prev</button></Link>\n                    <a>{day.date}</a>\n                    <Link to={`/days/${nextDay.id}`}><button >Next</button></Link>\n                </div>\n\n                \n                <a>Stickers:</a><div className=\"sticker-wrap\"> {mappedStickers} </div>\n            </div>\n            \n            <div class=\"Entries\">\n                <div> \n                    <h2>Posts:</h2>\n                    {mappedPosts}\n                </div>\n            </div>\n\n            <div class=\"New-Entries\">\n            <NewPostForm day={day} handleNewPost={handleNewPost}/>\n            </div>\n\n            <div class=\"StickersAdd\">\n                <NewDayStickerForm day={day} handleNewDaySticker={handleNewDaySticker} userStickers={user.stickers}/>\n            </div>\n            \n\n            <br></br>\n            <br></br>\n            </div>\n        )\n    }\n}\n\nexport default Day","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["139","140"],"\nfunction DayStickerRender({sticker, handleDeleteSticker, dayStickers}){\n\n    //THis is the day_sticker \n\n    let daySticker = dayStickers.find((dayS) => {\n        return (sticker.id === dayS.sticker_id)\n    })\n\n    //console.log(dayStickers, \"daystickers\")\n\n    function handleDeleteClick(){\n        //console.log(post.id)\n        //const id = sticker.id.toString()\n        fetch(`http://localhost:3000/day_stickers/${daySticker.id}`, {\n            method: \"DELETE\",\n        });\n        handleDeleteSticker(sticker, daySticker);\n    }\n\n    return (\n        <div className=\"sticker\">\n            <img src={sticker.image} width=\"80\" height=\"80\"/>\n            <button onClick={handleDeleteClick}><a>x</a></button>\n        </div>\n        \n    )\n}\n\nexport default DayStickerRender","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["141"],"import React, {useState} from \"react\";\n\nfunction NewDaySticker({handleNewDaySticker, day, userStickers}){\n\n    const [formData, setFormData] = useState({\n        day_id: day.id,\n        sticker_id: 1,\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n        \n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newStickerjoiner => handleNewDaySticker(newStickerjoiner))\n    }\n\n    // <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\">\n    // <label for=\"male\">Male</label><br>\n\n    const userStickerMapped = userStickers.map((sticker) => {\n        return (\n                <div className=\"sticker\" key={sticker.id}>\n                    <img src={sticker.image} width=\"80\" height=\"80\"/>\n                    <input type=\"radio\" name=\"sticker_id\" value={sticker.id} onChange={handleFormChange}/>\n                    <label >{sticker.name}</label>\n                </div> \n            )   \n    })\n\n    return (\n        <div>\n            <h2>Add a new Sticker! </h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"sticker-wrap\">\n                {userStickerMapped}\n                </div>\n\n                <button type=\"submit\">Apply the Sticker!</button>\n            </form>\n        </div>\n        \n    )\n}\n\nexport default NewDaySticker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["142"],"import { useState, useEffect }  from \"react\";\nimport EditBioForm from \"./userRenders/EditBioForm\"\nimport NewSticker from \"./userRenders/NewSticker\"\nimport StickerCard from \"./userRenders/StickerCard\";\n\nimport '../css/User.css';\n\nfunction User({user, setUser}){\n\n    const [editmode, setEditmode] = useState(false)\n    const [stickers, setStickers] = useState(user.stickers)\n\n    console.log(stickers, \"stickers list\")\n\n    const mappedUserStickers = stickers.map((sticker) => {\n            return <StickerCard sticker={sticker} onDeleteSticker={handleStickerDelete} key={sticker.id}/>\n    \n    })\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    function handleUserEdit(updatedUser){\n        //console.log(\"asdf\")\n        setUser(updatedUser)\n    }\n\n    function handleStickerDelete(removedSticker){\n        console.log(removedSticker)\n        const updatedStickers = stickers.filter((sticker) =>{\n            return (sticker.id !== removedSticker.id)\n        })\n        setStickers(updatedStickers)\n        const updatedUser = user\n        updatedUser.stickers = updatedStickers\n        setUser(updatedUser)\n    }\n\n    function handleNewSticker(newSticker){\n        //console.log(stickers, \"stickers before\")\n        //console.log(newSticker)\n        setStickers([...stickers, newSticker])\n\n        let updatedUser = user \n        updatedUser.stickers = [...stickers, newSticker]\n        setUser(updatedUser)\n        //console.log(updatedUser)\n        //console.log(user)\n    }\n\n    return(\n        <div className=\"grid-container-user\">\n            \n            <div className=\"Bio\">\n            <h3>Username: {user.username}</h3>\n            <h3>Name: {user.name}</h3>\n            <h3>Bio: {user.bio}</h3>\n            <p>Stickers: {user.stickers.length}</p>\n            <p>Journal Entries: {user.posts.length}</p>\n            <p>Sribbles Entries: {user.notes.length}</p>\n            <p>Stickers Placed: {user.day_stickers.length}</p>\n            </div>\n            \n            <div className=\"yourStickers\">\n            <h3>Your Stickers:</h3>\n\n            <div className=\"stickers\">\n                {mappedUserStickers}\n            </div>\n            </div>\n\n            <div className=\"editForm\">\n            {(editmode === true)\n                ? <EditBioForm user={user} handleUserEdit={handleUserEdit} setEditmode={setEditmode}/>\n                :<button className=\"edit-bio-bttn\" onClick={handleEditClick}>Edit Bio</button>\n            }\n            </div>\n\n            <div className=\"upload\">\n            <NewSticker user={user} handleNewSticker={handleNewSticker}/>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default User\n\n/* <div class=\"grid-container\">\n  <div class=\"Header\"></div>\n  <div class=\"Bio\"></div>\n  <div class=\"yourStickers\"></div>\n  <div class=\"upload\"></div>\n  <div class=\"editForm\"></div>\n</div> */","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["143"],"import { useState }  from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignUp ({setUser}){\n\n    //let date = new Date(Date.parse('2020/01/01'))\n    // let date = new Date(\"2020-01-02\")\n\n    // console.log(date)\n    // date.setDate(date.getDate + 1)\n    // console.log(date)\n    // // console.log(date)\n\n    // let today = new Date(Date.parse('2021/01/01'));\n    // let dd = String(today.getDate()).padStart(2, '0');\n    // let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    // let yyyy = today.getFullYear();\n    // let formated = mm + '/' + dd + '/' + yyyy;\n    //console.log(formated)\n\n    \n    function sleep(milliseconds) {\n        const date = Date.now();\n        let currentDate = null;\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < milliseconds);\n      }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        bio: \"\",\n    })\n\n    const [accountMade, setAccoutMade] = useState(false)\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n\n        fetch(`http://localhost:3000/users`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newUser => handleNewDays(newUser))\n    }\n\n\n    function handleNewDays(newUser){\n\n        let today = new Date(Date.parse('2021/01/01'));\n\n        for (let i = 0; i < 365; i++) {\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); \n            let yyyy = today.getFullYear();\n            let formatedDate = mm + '/' + dd + '/' + yyyy;\n            today.setHours(today.getHours() + 24)\n\n            const data = {\n                user_id: newUser.id,\n                date: formatedDate\n            }\n            //console.log(data.date)\n\n            fetch(`http://localhost:3000/days`,{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n                })\n            .then(r => r.json())\n            //.then(newDays => sleep(10))\n            //sleep(1000)\n        }\n\n        autoSticker(newUser)\n\n    }\n\n    function autoSticker(newUser){\n\n        const dataSticker = {\n            image: \"../imgs/hyped.jpg\",\n            name: \"Hyped\",\n            user_id: newUser.id,\n        }\n        // const form = new FormData()\n        // form.append(\"user_id\", dataSticker.user_id)\n        // form.append(\"image\", dataSticker.image)\n        // form.append(\"name\", dataSticker.name)\n        // console.log(form)\n\n        // fetch(`http://localhost:3000/stickers`,{\n        //     method: 'POST',\n        //     body: form,\n        //     })\n        // .then(r => r.json())\n        fetch(`http://localhost:3000/stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(dataSticker),\n            })\n        .then(r => r.json())\n\n        console.log(\"New user done!\")\n        setAccoutMade(true)\n        //setAutoLoginNewUser(newUser)\n    }\n\n    \n    // function setAutoLoginNewUser(newUser){\n    //     fetch(`http://localhost:3000/users/${newUser.id}`)\n    //         .then(resp => resp.json())\n    //         .then(data => {\n    //             setUser(data)\n    //     })\n    //     console.log(\"Im not sure\")\n    // }\n  \n\n    if(accountMade){\n        return (\n            <div>\n                <Link to={\"/login\"}>\n                 Account Made Succesful, Please Login By Clicking Here\n                 </Link>\n            </div>\n        )\n    } else {\n    return (\n        <div>\n            <h2>New User</h2>\n            <form onSubmit={handleSubmit}>\n                <label>UserName</label>\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"\n                value={formData.username}\n                onChange={handleFormChange}\n                />\n                <label>Password</label>\n                <input type=\"text\" name=\"password\" placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleFormChange}\n                />\n                <label>Your Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Name\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <label>About Yourself</label>\n                <input type=\"textarea\" name=\"bio\" placeholder=\"About Yourself!\"\n                value={formData.bio}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Make an Account </button>\n            </form>\n        </div>\n        )\n    }\n}\n\n\nexport default SignUp ","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["144","145","146","147"],"//import { useState, useEffect }  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Day from \"../Day\";\nimport NewDaySticker from \"../dayRenders/NewDayStickerForm\";\n//import CalendarDay from \"./CalendarDay\"\n\n\nfunction CalendarMaker({daysSliced, month, stickerMode, stickerSelected, handleNewDaySticker}){\n\n    //console.log(daysSliced)\n    const monthC = month % 12\n\n\n    function handleDayStickerClick(event) {\n        if (stickerSelected !== null){\n        const dayId = event.target.getAttribute(\"data-value\")\n        //console.log(event.target.getAttribute(\"data-value\"), \"dayID\")\n        //console.log(stickerSelected, \"stickerID\")\n        \n        const data = {\n            day_id: dayId,\n            sticker_id: stickerSelected,\n        }\n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n        .then(r => r.json())\n        .then(newDaySticker => handleNewDaySticker(newDaySticker))\n        }\n\n    }\n\n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n\n    //This is a helper function for daysMapped rendering, This deals with making each sticker show. \n    function postStickers(stickers){\n        const stickersMapped = stickers.slice(0, 3).map((sticker) => {\n            return <img src={sticker.image} alt={sticker.name} width=\"30\" height=\"30\" key={randoNumber()}/>\n        })\n        return <div>{stickersMapped}</div>\n    }\n\n    const daysMapped = daysSliced.map((day) => {\n        //return <CalendarDay day={day} key={day.id}/>\n\n        //First Part of is for the normal calendar redirects, \n        //This makes diffrenet calendar day boxes based on the attributes in the \"day\" object\n        if (stickerMode === false) {  \n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\" >\n                        <a>{day.date.slice(0,5)}</a><br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\" >\n                        <a>{day.date.slice(0,5)}</a><br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                    </div>\n                    </Link>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">{day.date.slice(0,5)}</div>\n                    </Link>\n                )\n            }\n        } else {\n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                        \n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                    </div>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}\n                    </div>\n                )\n            }\n\n        }\n\n    })\n\n    function weekdayNames(){\n        return (\n            <div className=\"weekdays\">\n                <div className=\"calendarDayLabels\">Sun</div>\n                <div className=\"calendarDayLabels\">Mon</div>\n                <div className=\"calendarDayLabels\">Tue</div>\n                <div className=\"calendarDayLabels\">Wed</div>\n                <div className=\"calendarDayLabels\">Thu</div>\n                <div className=\"calendarDayLabels\">Fri</div>\n                <div className=\"calendarDayLabels\">Sat</div>\n            </div>\n        )\n    }\n\n    if (monthC === 0){\n    return (\n       \n        <div className=\"calendar\">\n\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n        </div>\n        \n    )} else if (monthC === 1){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 2){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 3){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC ===4){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 5){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 6){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 7){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 8){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 9){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 10){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 11){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }\n        else {\n        return <div> loading not yet coded yet</div>\n    }\n\n    \n\n}\n\nexport default CalendarMaker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["148","149","150"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["151","152","153","154","155","156","157","158","159"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["160","161","162"],"function UserStickers({sticker}){\n\n\n\n\n    return (\n        <div className=\"stickerCard\"> \n                \n                <span className=\"radio__input\">\n                    <a>{sticker.name}</a>\n\n                    <label><input type=\"radio\" name=\"choice\" value={sticker.id}/></label>\n                    {/* <span class=\"radio__control\"></span> */}\n\n                </span>\n            \n            <div className=\"image-center\">\n                <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n            </div>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}\n\n{/* <label class=\"radio\">\n  <span class=\"radio__input\">\n    <input type=\"radio\" name=\"radio\">\n    <span class=\"radio__control\"></span>\n  </span>\n  <span class=\"radio__label\">Radio 1</span>\n</label> */}","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js",["163","164"],"function StickerCard({sticker, onDeleteSticker}){\n\n    function onDeleteClick(event){\n\n        //console.log(post.id)\n        const id = sticker.id.toString()\n        console.log(id)\n        fetch(`http://localhost:3000/stickers/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeleteSticker(sticker);\n    }\n\n\n    return (\n        <div key={sticker.id} className=\"sticker\">\n            <a>{sticker.name}</a>\n            <button onClick={onDeleteClick}>x</button>\n            <br/>\n            <img src={sticker.image} width=\"80\" height=\"80\"/>\n            \n        </div>\n    )\n\n}\n\nexport default StickerCard","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Notes.js",["165"],"import React, { useState, useEffect } from \"react\";\nimport NoteCard from \"./notesRenders/NoteCard\";\nimport NewNoteForm from \"./notesRenders/NewNoteForm\"\n\nfunction Notes ({user, setUser}){\n\n    const [notes, setNotes] = useState(user.notes)\n\n    const notesMapped = notes.map((note) =>{\n        return <NoteCard key={note.id} note={note} onDeleteNote={onDeleteNote} handleEditNote={handleEditNote}/>\n    })\n\n    function handleNewNote(newNote){\n        setNotes([...notes, newNote])\n\n        let updatedUser = user\n        updatedUser.notes = notes\n        setUser(updatedUser)\n    }\n\n    function onDeleteNote(removedNote){\n\n        const updatedNotes = notes.filter((note) => {\n            return removedNote.id !== note.id \n        })\n        setNotes(updatedNotes)\n\n        let updatedUser = user\n        updatedUser.notes = notes\n        setUser(updatedUser)\n    }\n\n    function handleEditNote(updatedNote){\n        const updatedNotes = notes.map((note) => {\n            if (note.id === updatedNote.id){\n                return updatedNote\n            } else {\n                return note\n            }\n        })\n        setNotes(updatedNotes)\n\n        let updatedUser = user \n        updatedUser.notes = notes\n        setUser(updatedUser)\n\n    }\n\n    return (\n        <div>\n            {notesMapped}\n\n            <NewNoteForm user={user} handleNewNote={handleNewNote}  />\n        </div>\n    )\n\n\n}\n\nexport default Notes","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NoteCard.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NewNoteForm.js",["166"],"import React, { useState, useEffect } from \"react\";\n\nfunction NewNoteForm ({user, handleNewNote}){\n\n    //console.log(notes)\n\n    const [formData, setFormData] = useState({\n\n        user_id: user.id,\n        title: \"\",\n        context: \"\",\n        text_color: \"#000000\",\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n\n        fetch(`http://localhost:3000/notes`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newNote => handleNewNote(newNote))\n    }\n    \n    return (\n        <div >\n            <h2>Write a new Scribble</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"title\" placeholder=\"Title\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <input type=\"textarea\" name=\"context\" placeholder=\"Your Entry\"\n                value={formData.context}\n                onChange={handleFormChange}\n                />\n                <input type=\"color\" name=\"text_color\" \n                value={formData.color}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Add the Scribble! </button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\nexport default NewNoteForm","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/EditNoteForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Search.js",["167","168"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/SearchTermSet.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/ResultCard.js",["169"],"import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResultCard({post}){\n\n    return (\n        \n        <div key={post.id}>\n            <Link to={`/days/${post.day_id}`}>\n            <h3>{post.date.slice(0,5)}: {post.title}</h3>\n            <p style={{color: post.text_color}}>{post.context}</p>\n            </Link>\n        </div>\n        \n    )\n}\n\nexport default ResultCard",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":2,"column":21,"nodeType":"176","messageId":"177","endLine":2,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":107,"column":21,"nodeType":"181","endLine":107,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":38,"column":7,"nodeType":"184","endLine":38,"endColumn":18,"suggestions":"185"},{"ruleId":"179","severity":1,"message":"180","line":289,"column":21,"nodeType":"181","endLine":289,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":294,"column":17,"nodeType":"181","endLine":294,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":23,"column":13,"nodeType":"181","endLine":23,"endColumn":62},{"ruleId":"179","severity":1,"message":"180","line":24,"column":49,"nodeType":"181","endLine":24,"endColumn":52},{"ruleId":"186","severity":1,"message":"187","line":38,"column":21,"nodeType":"181","endLine":38,"endColumn":70},{"ruleId":"174","severity":1,"message":"188","line":1,"column":20,"nodeType":"176","messageId":"177","endLine":1,"endColumn":29},{"ruleId":"174","severity":1,"message":"189","line":22,"column":14,"nodeType":"176","messageId":"177","endLine":22,"endColumn":19},{"ruleId":"174","severity":1,"message":"190","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":11},{"ruleId":"174","severity":1,"message":"191","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":61,"column":25,"nodeType":"181","endLine":61,"endColumn":28},{"ruleId":"179","severity":1,"message":"180","line":71,"column":25,"nodeType":"181","endLine":71,"endColumn":28},{"ruleId":"174","severity":1,"message":"192","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":21},{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":2,"column":21,"nodeType":"176","messageId":"177","endLine":2,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":19},{"ruleId":"174","severity":1,"message":"193","line":2,"column":16,"nodeType":"176","messageId":"177","endLine":2,"endColumn":24},{"ruleId":"174","severity":1,"message":"194","line":26,"column":14,"nodeType":"176","messageId":"177","endLine":26,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":35,"column":28,"nodeType":"181","endLine":35,"endColumn":59},{"ruleId":"179","severity":1,"message":"180","line":36,"column":36,"nodeType":"181","endLine":36,"endColumn":67},{"ruleId":"179","severity":1,"message":"180","line":37,"column":33,"nodeType":"181","endLine":37,"endColumn":64},{"ruleId":"179","severity":1,"message":"180","line":38,"column":44,"nodeType":"181","endLine":38,"endColumn":75},{"ruleId":"179","severity":1,"message":"180","line":39,"column":34,"nodeType":"181","endLine":39,"endColumn":65},{"ruleId":"179","severity":1,"message":"180","line":54,"column":13,"nodeType":"181","endLine":54,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":10,"column":21,"nodeType":"181","endLine":10,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":26,"column":1,"nodeType":"197","messageId":"198","endLine":26,"endColumn":55},{"ruleId":"195","severity":1,"message":"196","line":28,"column":1,"nodeType":"197","messageId":"198","endLine":34,"endColumn":13},{"ruleId":"179","severity":1,"message":"180","line":17,"column":13,"nodeType":"181","endLine":17,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":20,"column":13,"nodeType":"181","endLine":20,"endColumn":62},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"178","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"193","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":24},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["201"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'sleep' is defined but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","'useState' is defined but never used.","'redirectToSearch' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},"Update the dependencies array to be: [params.id, user.days]",{"range":"204","text":"205"},[1185,1196],"[params.id, user.days]"]