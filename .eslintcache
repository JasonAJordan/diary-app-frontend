[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js":"19","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js":"20","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js":"21","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js":"22","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Notes.js":"23","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NoteCard.js":"24","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NewNoteForm.js":"25","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/EditNoteForm.js":"26","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Search.js":"27","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/SearchTermSet.js":"28","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/ResultCard.js":"29","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/NoteShow.js":"30"},{"size":541,"mtime":1612363761833,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1612300184997,"results":"33","hashOfConfig":"32"},{"size":2456,"mtime":1613328783827,"results":"34","hashOfConfig":"32"},{"size":3683,"mtime":1613281451540,"results":"35","hashOfConfig":"32"},{"size":10194,"mtime":1613341521271,"results":"36","hashOfConfig":"32"},{"size":776,"mtime":1613099827363,"results":"37","hashOfConfig":"32"},{"size":1012,"mtime":1613267661796,"results":"38","hashOfConfig":"32"},{"size":1597,"mtime":1612924793207,"results":"39","hashOfConfig":"32"},{"size":1646,"mtime":1612407932798,"results":"40","hashOfConfig":"32"},{"size":1709,"mtime":1613097902562,"results":"41","hashOfConfig":"32"},{"size":2862,"mtime":1613281906199,"results":"42","hashOfConfig":"32"},{"size":1624,"mtime":1613093991934,"results":"43","hashOfConfig":"32"},{"size":5135,"mtime":1612910683515,"results":"44","hashOfConfig":"32"},{"size":11925,"mtime":1613283384630,"results":"45","hashOfConfig":"32"},{"size":413,"mtime":1612467783688,"results":"46","hashOfConfig":"32"},{"size":2394,"mtime":1613331379315,"results":"47","hashOfConfig":"32"},{"size":963,"mtime":1613280347139,"results":"48","hashOfConfig":"32"},{"size":865,"mtime":1613076959700,"results":"49","hashOfConfig":"32"},{"size":560,"mtime":1612991483460,"results":"50","hashOfConfig":"32"},{"size":2620,"mtime":1612834941553,"results":"51","hashOfConfig":"32"},{"size":1943,"mtime":1613092983584,"results":"52","hashOfConfig":"32"},{"size":620,"mtime":1613091775184,"results":"53","hashOfConfig":"32"},{"size":2799,"mtime":1613333591036,"results":"54","hashOfConfig":"32"},{"size":1042,"mtime":1613328296668,"results":"55","hashOfConfig":"32"},{"size":1618,"mtime":1612924518627,"results":"56","hashOfConfig":"32"},{"size":1662,"mtime":1613282392628,"results":"57","hashOfConfig":"32"},{"size":4687,"mtime":1613341457363,"results":"58","hashOfConfig":"32"},{"size":405,"mtime":1613267324403,"results":"59","hashOfConfig":"32"},{"size":1399,"mtime":1613340762725,"results":"60","hashOfConfig":"32"},{"size":2295,"mtime":1613330945403,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"pp5roh",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["133","134"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["135","136","137"],"//import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CalendarMaker from \"./CalendarRenders/CalendarMaker\"\nimport StickerApplyBox from \"./CalendarRenders/StickerApplyBox\"\n\nimport '../App.css'\nimport { useState } from \"react\";\n\n\nfunction Calendar({ month, setMonth, user, setUser}){\n\n    const [stickerMode, setStickerMode] = useState(false)\n    const [stickerSelected, setStickerSelected] = useState(null)\n    const [days, setDays ] =useState(user.days)\n    //console.log(user.days , \"userdays\")\n    //console.log(stickerSelected)\n\n    const sliceMonthStart=[0,31,59,90,120,151,181,212,243,273,304,334]\n    const sliceMonthEnd =[31,59,90,120,151,181,212,243,273,304,334,365]\n\n    //const [days, setDays] = useState([user.days])\n\n    const daysOrdered = days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n    \n    const daysSliced = daysOrdered.slice(sliceMonthStart[month], sliceMonthEnd[month])\n\n    function updateDaysForAddStickers(daysArray,newDayStickerJoiner, newDaySticker ){\n        const updatedDays = []\n\n        let dayID = newDaySticker.day.id\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayID) {\n                let updatedDay = daysArray[i];\n                updatedDay.stickers.push(newDaySticker.sticker)\n                updatedDay.day_stickers.push(newDayStickerJoiner)\n                console.log(updatedDay)\n                \n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        return updatedDays\n    }\n\n\n\n    function handleNewDaySticker(newDaySticker){\n\n        const newDayStickerJoiner = {\n            id: newDaySticker.id,\n            day_id: newDaySticker.day.id,\n            sticker_id: newDaySticker.sticker.id,\n        }\n\n        let updatedUser = user\n        const updatedDays = updateDaysForAddStickers(user.days, newDayStickerJoiner, newDaySticker)\n        setDays(updatedDays)\n        updatedUser.days = updatedDays\n        \n        setUser(updatedUser)\n\n    }\n\n    const months =[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\", \n    ]\n\n    //console.log(month)\n\n    function handleNextMonth(){\n        if(month === 11){\n            setMonth(0)\n        } else{\n        setMonth(month+1)\n        }\n    }\n    function handelPrevMonth(){\n        if (month === 0){\n            setMonth(11)\n        } else {\n        setMonth(month-1)\n        }\n    }\n\n    return(\n        \n        <div className=\"grid-container\">\n\n            <div className=\"Month-Name\">\n                <button className=\"cal-buttons\" onClick={handelPrevMonth}>  Prev </button>\n                \n                    <a>{months[month]}</a>\n                \n                <button className=\"cal-buttons\" onClick={handleNextMonth}> Next </button>\n            </div>\n\n            <div className=\"Calendar\">\n            <CalendarMaker daysSliced={daysSliced} \n            month={month} stickerMode={stickerMode}\n            stickerSelected={stickerSelected}\n            handleNewDaySticker={handleNewDaySticker}\n            />\n            </div>\n\n            <div className=\"Edit-Box\">\n            <StickerApplyBox user={user} \n            stickerMode ={stickerMode} \n            setStickerMode={setStickerMode}\n            setStickerSelected={setStickerSelected}\n            />\n            \n            </div>\n            <div><br/></div>\n        </div>\n        \n    )\n}\n\nexport default Calendar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["138","139","140"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["141","142"],"\nfunction DayStickerRender({sticker, handleDeleteSticker, dayStickers}){\n\n    //THis is the day_sticker \n\n    let daySticker = dayStickers.find((dayS) => {\n        return (sticker.id === dayS.sticker_id)\n    })\n\n    //console.log(dayStickers, \"daystickers\")\n\n    function handleDeleteClick(){\n        //console.log(post.id)\n        //const id = sticker.id.toString()\n        fetch(`http://localhost:3000/day_stickers/${daySticker.id}`, {\n            method: \"DELETE\",\n        });\n        handleDeleteSticker(sticker, daySticker);\n    }\n\n    return (\n        <div className=\"sticker\">\n            <img src={sticker.image} width=\"80\" height=\"80\"/>\n            <button onClick={handleDeleteClick}><a>x</a></button>\n        </div>\n        \n    )\n}\n\nexport default DayStickerRender","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["143"],"import React, {useState} from \"react\";\n\nfunction NewDaySticker({handleNewDaySticker, day, userStickers}){\n\n    const [formData, setFormData] = useState({\n        day_id: day.id,\n        sticker_id: 1,\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n        \n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newStickerjoiner => handleNewDaySticker(newStickerjoiner))\n    }\n\n    // <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\">\n    // <label for=\"male\">Male</label><br>\n\n    const userStickerMapped = userStickers.map((sticker) => {\n        return (\n                <div className=\"sticker\" key={sticker.id}>\n                    <img src={sticker.image} width=\"80\" height=\"80\"/>\n                    <input type=\"radio\" name=\"sticker_id\" value={sticker.id} onChange={handleFormChange}/>\n                    <label >{sticker.name}</label>\n                </div> \n            )   \n    })\n\n    return (\n        <div>\n            <h2>Add a new Sticker! </h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"sticker-wrap\">\n                {userStickerMapped}\n                </div>\n\n                <button type=\"submit\">Apply the Sticker!</button>\n            </form>\n        </div>\n        \n    )\n}\n\nexport default NewDaySticker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["144"],"import { useState, useEffect }  from \"react\";\nimport EditBioForm from \"./userRenders/EditBioForm\"\nimport NewSticker from \"./userRenders/NewSticker\"\nimport StickerCard from \"./userRenders/StickerCard\";\n\nimport '../css/User.css';\n\nfunction User({user, setUser}){\n\n    const [editmode, setEditmode] = useState(false)\n    const [stickers, setStickers] = useState(user.stickers)\n\n    //console.log(stickers, \"stickers list\")\n\n    const mappedUserStickers = stickers.map((sticker) => {\n            return <StickerCard sticker={sticker} onDeleteSticker={handleStickerDelete} key={sticker.id}/>\n    \n    })\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    function handleUserEdit(updatedUser){\n        //console.log(\"asdf\")\n        setUser(updatedUser)\n    }\n\n    function handleStickerDelete(removedSticker){\n        console.log(removedSticker)\n        const updatedStickers = stickers.filter((sticker) =>{\n            return (sticker.id !== removedSticker.id)\n        })\n        setStickers(updatedStickers)\n        const updatedUser = user\n        updatedUser.stickers = updatedStickers\n        setUser(updatedUser)\n    }\n\n    function handleNewSticker(newSticker){\n        //console.log(stickers, \"stickers before\")\n        //console.log(newSticker)\n        setStickers([...stickers, newSticker])\n\n        let updatedUser = user \n        updatedUser.stickers = [...stickers, newSticker]\n        setUser(updatedUser)\n        //console.log(updatedUser)\n        //console.log(user)\n    }\n\n    return(\n        <div className=\"grid-container-user\">\n            \n            <div className=\"Bio\">\n            <h3>Username: {user.username}</h3>\n            <h3>Name: {user.name}</h3>\n            <h3>Bio: {user.bio}</h3>\n            <p>Stickers: {user.stickers.length}</p>\n            <p>Journal Entries: {user.posts.length}</p>\n            <p>Sribbles Entries: {user.notes.length}</p>\n            <p>Stickers Placed: {user.day_stickers.length}</p>\n            </div>\n            \n            <div className=\"yourStickers\">\n            <h3>Your Stickers:</h3>\n\n            <div className=\"stickers\">\n                {mappedUserStickers}\n            </div>\n            </div>\n\n            <div className=\"editForm\">\n            {(editmode === true)\n                ? <EditBioForm user={user} handleUserEdit={handleUserEdit} setEditmode={setEditmode}/>\n                :<button className=\"edit-bio-bttn\" onClick={handleEditClick}>Edit Bio</button>\n            }\n            </div>\n\n            <div className=\"upload\">\n            <NewSticker user={user} handleNewSticker={handleNewSticker}/>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default User\n\n/* <div class=\"grid-container\">\n  <div class=\"Header\"></div>\n  <div class=\"Bio\"></div>\n  <div class=\"yourStickers\"></div>\n  <div class=\"upload\"></div>\n  <div class=\"editForm\"></div>\n</div> */","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["145"],"import { useState }  from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignUp ({setUser}){\n\n    //let date = new Date(Date.parse('2020/01/01'))\n    // let date = new Date(\"2020-01-02\")\n\n    // console.log(date)\n    // date.setDate(date.getDate + 1)\n    // console.log(date)\n    // // console.log(date)\n\n    // let today = new Date(Date.parse('2021/01/01'));\n    // let dd = String(today.getDate()).padStart(2, '0');\n    // let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    // let yyyy = today.getFullYear();\n    // let formated = mm + '/' + dd + '/' + yyyy;\n    //console.log(formated)\n\n    \n    function sleep(milliseconds) {\n        const date = Date.now();\n        let currentDate = null;\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < milliseconds);\n      }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        bio: \"\",\n    })\n\n    const [accountMade, setAccoutMade] = useState(false)\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n\n        fetch(`http://localhost:3000/users`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newUser => handleNewDays(newUser))\n    }\n\n\n    function handleNewDays(newUser){\n\n        let today = new Date(Date.parse('2021/01/01'));\n\n        for (let i = 0; i < 365; i++) {\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); \n            let yyyy = today.getFullYear();\n            let formatedDate = mm + '/' + dd + '/' + yyyy;\n            today.setHours(today.getHours() + 24)\n\n            const data = {\n                user_id: newUser.id,\n                date: formatedDate\n            }\n            //console.log(data.date)\n\n            fetch(`http://localhost:3000/days`,{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n                })\n            .then(r => r.json())\n            //.then(newDays => sleep(10))\n            //sleep(1000)\n        }\n\n        autoSticker(newUser)\n\n    }\n\n    function autoSticker(newUser){\n\n        const dataSticker = {\n            image: \"../imgs/hyped.jpg\",\n            name: \"Hyped\",\n            user_id: newUser.id,\n        }\n        // const form = new FormData()\n        // form.append(\"user_id\", dataSticker.user_id)\n        // form.append(\"image\", dataSticker.image)\n        // form.append(\"name\", dataSticker.name)\n        // console.log(form)\n\n        // fetch(`http://localhost:3000/stickers`,{\n        //     method: 'POST',\n        //     body: form,\n        //     })\n        // .then(r => r.json())\n        fetch(`http://localhost:3000/stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(dataSticker),\n            })\n        .then(r => r.json())\n\n        console.log(\"New user done!\")\n        setAccoutMade(true)\n        //setAutoLoginNewUser(newUser)\n    }\n\n    \n    // function setAutoLoginNewUser(newUser){\n    //     fetch(`http://localhost:3000/users/${newUser.id}`)\n    //         .then(resp => resp.json())\n    //         .then(data => {\n    //             setUser(data)\n    //     })\n    //     console.log(\"Im not sure\")\n    // }\n  \n\n    if(accountMade){\n        return (\n            <div>\n                <Link to={\"/login\"}>\n                 Account Made Succesful, Please Login By Clicking Here\n                 </Link>\n            </div>\n        )\n    } else {\n    return (\n        <div>\n            <h2>New User</h2>\n            <form onSubmit={handleSubmit}>\n                <label>UserName</label>\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"\n                value={formData.username}\n                onChange={handleFormChange}\n                />\n                <label>Password</label>\n                <input type=\"text\" name=\"password\" placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleFormChange}\n                />\n                <label>Your Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Name\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <label>About Yourself</label>\n                <input type=\"textarea\" name=\"bio\" placeholder=\"About Yourself!\"\n                value={formData.bio}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Make an Account </button>\n            </form>\n        </div>\n        )\n    }\n}\n\n\nexport default SignUp ","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["146","147"],"//import { useState, useEffect }  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Day from \"../Day\";\nimport NewDaySticker from \"../dayRenders/NewDayStickerForm\";\n//import CalendarDay from \"./CalendarDay\"\n\n\nfunction CalendarMaker({daysSliced, month, stickerMode, stickerSelected, handleNewDaySticker}){\n\n    //console.log(daysSliced)\n    const monthC = month % 12\n\n\n    function handleDayStickerClick(event) {\n        if (stickerSelected !== null){\n        const dayId = event.target.getAttribute(\"data-value\")\n        //console.log(event.target.getAttribute(\"data-value\"), \"dayID\")\n        //console.log(stickerSelected, \"stickerID\")\n        \n        const data = {\n            day_id: dayId,\n            sticker_id: stickerSelected,\n        }\n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n        .then(r => r.json())\n        .then(newDaySticker => handleNewDaySticker(newDaySticker))\n        }\n\n    }\n\n\n    function randoNumber(){\n        return Math.floor(Math.random() * Math.floor(100))\n    }\n\n    //This is a helper function for daysMapped rendering, This deals with making each sticker show. \n    function postStickers(stickers){\n        const stickersMapped = stickers.slice(0, 3).map((sticker) => {\n            return <img src={sticker.image} alt={sticker.name} width=\"30\" height=\"30\" key={randoNumber()}/>\n        })\n        return <div>{stickersMapped}</div>\n    }\n\n    const daysMapped = daysSliced.map((day) => {\n        //return <CalendarDay day={day} key={day.id}/>\n\n        //First Part of is for the normal calendar redirects, \n        //This makes diffrenet calendar day boxes based on the attributes in the \"day\" object\n        if (stickerMode === false) {  \n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\" >\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\" >\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                    </div>\n                    </Link>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">{day.date.slice(0,5)}</div>\n                    </Link>\n                )\n            }\n        } else {\n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                        \n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        <div style={{color: day.posts[0].text_color}}>Entry Made!</div>\n                    </div>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}\n                    </div>\n                )\n            }\n\n        }\n\n    })\n\n    function weekdayNames(){\n        return (\n            <div className=\"weekdays\">\n                <div className=\"calendarDayLabels\">Sun</div>\n                <div className=\"calendarDayLabels\">Mon</div>\n                <div className=\"calendarDayLabels\">Tue</div>\n                <div className=\"calendarDayLabels\">Wed</div>\n                <div className=\"calendarDayLabels\">Thu</div>\n                <div className=\"calendarDayLabels\">Fri</div>\n                <div className=\"calendarDayLabels\">Sat</div>\n            </div>\n        )\n    }\n\n    if (monthC === 0){\n    return (\n       \n        <div className=\"calendar\">\n\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n        </div>\n        \n    )} else if (monthC === 1){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 2){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 3){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC ===4){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 5){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 6){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 7){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 8){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 9){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 10){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 11){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }\n        else {\n        return <div> loading not yet coded yet</div>\n    }\n\n    \n\n}\n\nexport default CalendarMaker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["148","149","150"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["151","152","153","154"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["155","156","157"],"function UserStickers({sticker}){\n\n\n\n\n    return (\n        <div className=\"stickerCard\"> \n                \n                <span className=\"radio__input\">\n                    <a>{sticker.name}</a>\n\n                    <label><input type=\"radio\" name=\"choice\" value={sticker.id}/></label>\n                    {/* <span class=\"radio__control\"></span> */}\n\n                </span>\n            \n            <div className=\"image-center\">\n                <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n            </div>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}\n\n{/* <label class=\"radio\">\n  <span class=\"radio__input\">\n    <input type=\"radio\" name=\"radio\">\n    <span class=\"radio__control\"></span>\n  </span>\n  <span class=\"radio__label\">Radio 1</span>\n</label> */}","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Home.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/LoginPage.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/NewSticker.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/StickerCard.js",["158","159"],"function StickerCard({sticker, onDeleteSticker}){\n\n    function onDeleteClick(event){\n\n        //console.log(post.id)\n        const id = sticker.id.toString()\n        console.log(id)\n        fetch(`http://localhost:3000/stickers/${id}`, {\n            method: \"DELETE\",\n        });\n        onDeleteSticker(sticker);\n    }\n\n\n    return (\n        <div key={sticker.id} className=\"sticker\">\n            <a>{sticker.name}</a>\n            <button onClick={onDeleteClick}>x</button>\n            <br/>\n            <img src={sticker.image} width=\"80\" height=\"80\"/>\n            \n        </div>\n    )\n\n}\n\nexport default StickerCard","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Notes.js",["160"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NoteCard.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/NewNoteForm.js",["161"],"import React, { useState, useEffect } from \"react\";\n\nfunction NewNoteForm ({user, handleNewNote}){\n\n    //console.log(notes)\n\n    const [formData, setFormData] = useState({\n\n        user_id: user.id,\n        title: \"\",\n        context: \"\",\n        text_color: \"#000000\",\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        //console.log(formData)\n\n        fetch(`http://localhost:3000/notes`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newNote => handleNewNote(newNote))\n    }\n    \n    return (\n        <div >\n            <h2>Write a new Scribble</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"title\" placeholder=\"Title\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <input type=\"textarea\" name=\"context\" placeholder=\"Your Entry\"\n                value={formData.context}\n                onChange={handleFormChange}\n                />\n                <input type=\"color\" name=\"text_color\" \n                value={formData.color}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Add the Scribble! </button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\nexport default NewNoteForm","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/notesRenders/EditNoteForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Search.js",["162","163","164","165","166","167"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/SearchTermSet.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SearchRenders/ResultCard.js",["168"],"import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResultCard({ blob}){\n\n    // if (post){\n    //     return (\n            \n    //         <div key={post.id}>\n    //             <Link to={`/days/${post.day_id}`}>\n    //             <h3>{post.date.slice(0,5)}: {post.title}</h3>\n    //             <p style={{color: post.text_color}}>{post.context}</p>\n    //             </Link>\n    //         </div>   \n    //     )}\n    // if (note){\n    //     return(\n    //         <div>\n    //             <Link to={`/notes/${note.id}`}>\n    //             <h3>Note: {note.title}</h3>\n    //             <p style={{color: note.text_color}}>{note.context}</p>\n    //             </Link>\n    //         </div> \n    //     )\n    // } \n    // ONe function for 2 jobs now! \n    if(blob.date){\n        return (\n            <div>\n                <Link to={`/days/${blob.day_id}`}>\n                <h3>{blob.date.slice(0,5)}: {blob.title}</h3>\n                <p style={{color: blob.text_color}}>{blob.context}</p>\n                </Link>\n            </div>   \n        )}\n    if(!blob.date) {\n        return(\n            <div>\n                <Link to={`/notes/${blob.id}`}>\n                <h3>Note: {blob.title}</h3>\n                <p style={{color: blob.text_color}}>{blob.context}</p>\n                </Link>\n            </div> \n        )\n    }\n\n}\n\nexport default ResultCard","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/NoteShow.js",["169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":2,"column":21,"nodeType":"176","messageId":"177","endLine":2,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":107,"column":21,"nodeType":"181","endLine":107,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":38,"column":7,"nodeType":"184","endLine":38,"endColumn":18,"suggestions":"185"},{"ruleId":"179","severity":1,"message":"180","line":289,"column":21,"nodeType":"181","endLine":289,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":294,"column":17,"nodeType":"181","endLine":294,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":23,"column":13,"nodeType":"181","endLine":23,"endColumn":62},{"ruleId":"179","severity":1,"message":"180","line":24,"column":49,"nodeType":"181","endLine":24,"endColumn":52},{"ruleId":"186","severity":1,"message":"187","line":38,"column":21,"nodeType":"181","endLine":38,"endColumn":70},{"ruleId":"174","severity":1,"message":"188","line":1,"column":20,"nodeType":"176","messageId":"177","endLine":1,"endColumn":29},{"ruleId":"174","severity":1,"message":"189","line":22,"column":14,"nodeType":"176","messageId":"177","endLine":22,"endColumn":19},{"ruleId":"174","severity":1,"message":"190","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":11},{"ruleId":"174","severity":1,"message":"191","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":21},{"ruleId":"174","severity":1,"message":"192","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":21},{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":2,"column":21,"nodeType":"176","messageId":"177","endLine":2,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":19},{"ruleId":"174","severity":1,"message":"193","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"194","line":2,"column":16,"nodeType":"176","messageId":"177","endLine":2,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":57,"column":13,"nodeType":"181","endLine":57,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":10,"column":21,"nodeType":"181","endLine":10,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":26,"column":1,"nodeType":"197","messageId":"198","endLine":26,"endColumn":55},{"ruleId":"195","severity":1,"message":"196","line":28,"column":1,"nodeType":"197","messageId":"198","endLine":34,"endColumn":13},{"ruleId":"179","severity":1,"message":"180","line":17,"column":13,"nodeType":"181","endLine":17,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":20,"column":13,"nodeType":"181","endLine":20,"endColumn":62},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"178","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":19,"column":49,"nodeType":"201","messageId":"202","endLine":19,"endColumn":51},{"ruleId":"199","severity":1,"message":"200","line":33,"column":49,"nodeType":"201","messageId":"202","endLine":33,"endColumn":51},{"ruleId":"174","severity":1,"message":"203","line":46,"column":11,"nodeType":"176","messageId":"177","endLine":46,"endColumn":27},{"ruleId":"174","severity":1,"message":"204","line":52,"column":11,"nodeType":"176","messageId":"177","endLine":52,"endColumn":28},{"ruleId":"174","severity":1,"message":"194","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"205","line":24,"column":7,"nodeType":"184","endLine":24,"endColumn":18,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["209"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'sleep' is defined but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'filterPostMapped' is assigned a value but never used.","'filterNotesMapped' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.notes'. Either include it or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [params.id, user.days]",{"range":"215","text":"216"},"Update the dependencies array to be: [params.id, user.notes]",{"range":"217","text":"218"},[1185,1196],"[params.id, user.days]",[743,754],"[params.id, user.notes]"]