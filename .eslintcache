[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18"},{"size":541,"mtime":1612363761833,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612300184997,"results":"21","hashOfConfig":"20"},{"size":1341,"mtime":1612540844854,"results":"22","hashOfConfig":"20"},{"size":2895,"mtime":1612573515818,"results":"23","hashOfConfig":"20"},{"size":4911,"mtime":1612573918380,"results":"24","hashOfConfig":"20"},{"size":646,"mtime":1612567210469,"results":"25","hashOfConfig":"20"},{"size":1024,"mtime":1612386478562,"results":"26","hashOfConfig":"20"},{"size":1590,"mtime":1612454391692,"results":"27","hashOfConfig":"20"},{"size":1646,"mtime":1612407932798,"results":"28","hashOfConfig":"20"},{"size":1595,"mtime":1612402382359,"results":"29","hashOfConfig":"20"},{"size":1126,"mtime":1612407853439,"results":"30","hashOfConfig":"20"},{"size":1325,"mtime":1612407704453,"results":"31","hashOfConfig":"20"},{"size":3318,"mtime":1612456591036,"results":"32","hashOfConfig":"20"},{"size":11428,"mtime":1612566330742,"results":"33","hashOfConfig":"20"},{"size":413,"mtime":1612467783688,"results":"34","hashOfConfig":"20"},{"size":574,"mtime":1612489458619,"results":"35","hashOfConfig":"20"},{"size":1012,"mtime":1612564364649,"results":"36","hashOfConfig":"20"},{"size":371,"mtime":1612553192585,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pp5roh",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["81","82"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["83","84"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["85","86","87"],"import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DayStickerRender from \"./dayRenders/DayStickerRender\";\nimport NewPostForm from \"./dayRenders/NewPostForm\";\nimport NewDayStickerForm from \"./dayRenders/NewDayStickerForm\";\nimport PostRender from \"./dayRenders/PostRender\";\n\n\nfunction Day({user, setUser}){\n\n    const params =useParams();\n\n    const [day, setDay] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [stickers, setStickers] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    function search(dayId, daysArray){\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id === dayId) {\n                return daysArray[i];\n            }\n        }\n    }\n\n    // const resultObject = search(Number(params.id), user.days)\n    // //console.log(params.id)\n    // console.log(user.days)\n    // console.log(resultObject)\n\n    useEffect(() => {\n        const resultObject = search(Number(params.id), user.days)\n        //console.log(resultObject)\n        setDay(resultObject);\n        setPosts(resultObject.posts)\n        setStickers(resultObject.stickers)\n        setIsLoaded(true);\n\n    },[params.id])\n\n     function updateDaysForNew(dayId, daysArray, updatedPost){\n        const updatedDays = []\n        //console.log (daysArray, \"function array check \")\n        console.log(dayId)\n\n        for (let i=0; i < daysArray.length; i++) {\n            if (daysArray[i].id == dayId) {\n                const updatedPostArray = daysArray[i].posts.concat(updatedPost)\n                //console.log(daysArray[i], \"the array in the if statment\")\n                //console.log(daysArray[i].posts, \"array.posts\")\n                //console.log(daysArray[i][date])\n                //console.log(updatedPostArray, \"what's being pushed into the day's post array\")\n                let updatedDay = daysArray[i];\n                updatedDay.posts = updatedPostArray\n                updatedDays.push(updatedDay);\n            } else {\n                updatedDays.push(daysArray[i]);\n            }\n        }\n        //console.log(updatedDays, \"function check \")\n        return updatedDays\n    }\n\n\n    // useEffect(() => {\n    //     fetch(`http://localhost:3000/days/${params.id}`)\n    //     .then((r) => r.json())\n    //     .then((data) => {\n    //         setDay(data);\n    //         setPosts(data.posts)\n    //         setStickers(data.stickers)\n    //         setIsLoaded(true);\n    //     })\n    // },[params.id])\n\n    //Loading data \n    if (!isLoaded) return <h2>Loading...</h2>\n\n    \n    //Maping Data\n    const mappedStickers = stickers.map((sticker) => {\n        return <DayStickerRender sticker={sticker} key={sticker.id}\n        handleDeleteSticker={handleDeleteSticker}\n        dayStickers ={day.day_stickers}\n        />\n    })\n\n    const mappedPosts = posts.map((post) => {\n        return <PostRender post={post} key={post.id} \n        onDeletePost={handleDeletePost}\n        handleEditPost={handleEditPost}\n        day={day}\n        />\n    })\n\n    //Post handles \n    function handleNewPost(newPost){\n        setPosts([...posts, newPost])\n        //setUser(user)\n\n        const updatedUser = user \n        const updatedDays = updateDaysForNew(params.id, user.days, newPost)\n        //console.log(updatedUser, \"the user before the update\")\n        //console.log(updatedUser.days, \"usersdays before update\")\n        updatedUser.days = updatedDays\n        //console.log(updatedDays, \"updated days\")\n\n        setUser(updatedUser)\n\n    }\n\n    function handleDeletePost(removedPost){\n        const updatedPost = posts.filter((post) => (\n            post.id !== removedPost.id ? true : false\n        ))\n        setPosts(updatedPost)\n    }\n    \n    function handleEditPost(updatedPost){\n        const updatedPostsArray = posts.map((post) => {\n            if (post.id === updatedPost.id){\n                return updatedPost;\n            } else {\n                return post\n            }\n        })\n        setPosts(updatedPostsArray)\n    }\n\n    //stickerHandles \n    function handleNewDaySticker(newStickerjoiner){\n        setStickers([...stickers, newStickerjoiner.sticker])\n    }\n\n    function handleDeleteSticker(removedSticker){\n        const updatedStickers = stickers.filter((sticker) => (\n            sticker.id !== removedSticker.id ? true : false\n        ))\n        setStickers(updatedStickers)\n    }\n\n    return(\n        <div>\n\n        This is the day page! \n        <h1>{day.date}</h1>\n        \n        <h2>Stickers: {mappedStickers} </h2>\n\n        <div> \n            <h2>Posts:</h2>\n            {mappedPosts}\n        </div>\n\n        <NewPostForm day={day} handleNewPost={handleNewPost}/>\n        <NewDayStickerForm day={day} handleNewDaySticker={handleNewDaySticker} userStickers={user.stickers}/>\n\n        <br></br>\n        <br></br>\n        </div>\n\n        \n    )\n}\n\nexport default Day","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["88","89"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["90"],"import React, {useState} from \"react\";\n\nfunction NewDaySticker({handleNewDaySticker, day, userStickers}){\n\n    const [formData, setFormData] = useState({\n        day_id: day.id,\n        sticker_id: 1,\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n        \n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newStickerjoiner => handleNewDaySticker(newStickerjoiner))\n    }\n\n    // <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\">\n    // <label for=\"male\">Male</label><br>\n\n    const userStickerMapped = userStickers.map((sticker) => {\n        return (\n                <div key={sticker.id}>\n                    <img src={sticker.image}/>\n                    <input type=\"radio\" name=\"sticker_id\" value={sticker.id} onChange={handleFormChange}/>\n                    <label >{sticker.name}</label>\n                </div> \n            )   \n    })\n\n    return (\n        <div>\n            <h2>Add a new Sticker! </h2>\n            <form onSubmit={handleSubmit}>\n                {userStickerMapped}\n\n                <button type=\"submit\">Apply the Sticker!</button>\n            </form>\n        </div>\n        \n    )\n}\n\nexport default NewDaySticker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["91","92"],"import { useState, useEffect }  from \"react\";\nimport EditBioForm from \"./userRenders/EditBioForm\"\n\nfunction User({user, setUser}){\n\n    const [editmode, setEditmode] = useState(false)\n\n    const mappedUserStickers = user.stickers.map((sticker) => {\n        return (\n                <div>\n                    <h4>{sticker.name}</h4>\n                    <img src={sticker.image}/>\n                </div>\n        )\n    })\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    function handleUserEdit(updatedUser){\n        //console.log(\"asdf\")\n        setUser(updatedUser)\n\n    }\n\n    return(\n        <div>\n            <h2>This is the User Page! </h2>\n\n            <h3>Username: {user.username}</h3>\n            <h3>Name: {user.name}</h3>\n            <h3>Bio: {user.bio}</h3>\n            <h3>Your Stickers:</h3>\n            {mappedUserStickers}\n\n            {(editmode === true)\n                ? <EditBioForm user={user} handleUserEdit={handleUserEdit} setEditmode={setEditmode}/>\n                :<button onClick={handleEditClick}>Edit Bio</button>\n            }\n\n        </div>\n    )\n}\n\nexport default User","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["93"],"import { useState }  from \"react\";\n\nfunction SignUp (){\n\n    //let date = new Date(Date.parse('2020/01/01'))\n    // let date = new Date(\"2020-01-02\")\n\n    // console.log(date)\n    // date.setDate(date.getDate + 1)\n    // console.log(date)\n    // // console.log(date)\n\n    // let today = new Date(Date.parse('2021/01/01'));\n    // let dd = String(today.getDate()).padStart(2, '0');\n    // let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    // let yyyy = today.getFullYear();\n    // let formated = mm + '/' + dd + '/' + yyyy;\n    //console.log(formated)\n    function sleep(milliseconds) {\n        const date = Date.now();\n        let currentDate = null;\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < milliseconds);\n      }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        bio: \"\",\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n\n        fetch(`http://localhost:3000/users`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newUser => handleNewPost(newUser))\n    }\n\n\n    function handleNewPost(newUser){\n\n        let today = new Date(Date.parse('2021/01/01'));\n\n        for (let i=0; i < 365; i++) {\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); \n            let yyyy = today.getFullYear();\n            let formatedDate = mm + '/' + dd + '/' + yyyy;\n            today.setHours(today.getHours() + 24)\n\n            let data = {\n                user_id: newUser.id,\n                date: formatedDate\n            }\n            fetch(`http://localhost:3000/days`,{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n                })\n            .then(r => r.json())\n            //then(newDays =>)\n\n            // sleep(1000)\n        }\n\n    }\n\n\n    return (\n        <div>\n            <h2>New User</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"\n                value={formData.username}\n                onChange={handleFormChange}\n                />\n                <input type=\"text\" name=\"password\" placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleFormChange}\n                />\n                <input type=\"text\" name=\"name\" placeholder=\"Name\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <input type=\"textarea\" name=\"bio\" placeholder=\"About Yourself!\"\n                value={formData.bio}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Make an Account </button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default SignUp ","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["94","95"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["96","97","98"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["99"],"import { useParams, Link } from \"react-router-dom\";\n\nfunction NavBar({user}){\n\n\n    if (user){\n        return (\n            <div>Nav Bar for user\n            <Link to={`/`}>Home</Link>\n            <Link to={`/`}>Calendar</Link>\n            <Link to={`/users/${user.id}`}>User</Link>\n        </div>    \n        )\n    } else {\n        return (\n            <div>NavBar for not Logined \n\n                <Link to={`/`}>Home</Link>\n                {}\n                {/* <Link to={`/users/${user.id}`}>User</Link> */}\n            </div>\n        )\n    }\n\n\n}\n\nexport default NavBar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["100"],"function UserStickers({sticker}){\n\n    return (\n        <div> \n            <h3>{sticker.name}</h3>\n            <input type=\"radio\" name=\"choice\" value={sticker.id}/>\n            <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":2,"column":21,"nodeType":"107","messageId":"108","endLine":2,"endColumn":25},{"ruleId":"105","severity":1,"message":"109","line":2,"column":21,"nodeType":"107","messageId":"108","endLine":2,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":39,"column":7,"nodeType":"112","endLine":39,"endColumn":18,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":47,"column":33,"nodeType":"116","messageId":"117","endLine":47,"endColumn":35},{"ruleId":"105","severity":1,"message":"118","line":6,"column":11,"nodeType":"107","messageId":"108","endLine":6,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":21,"column":13,"nodeType":"121","endLine":21,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":39,"column":21,"nodeType":"121","endLine":39,"endColumn":47},{"ruleId":"105","severity":1,"message":"122","line":1,"column":20,"nodeType":"107","messageId":"108","endLine":1,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":12,"column":21,"nodeType":"121","endLine":12,"endColumn":47},{"ruleId":"105","severity":1,"message":"123","line":19,"column":14,"nodeType":"107","messageId":"108","endLine":19,"endColumn":19},{"ruleId":"105","severity":1,"message":"124","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":11},{"ruleId":"105","severity":1,"message":"125","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":21},{"ruleId":"105","severity":1,"message":"126","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":2,"column":21,"nodeType":"107","messageId":"108","endLine":2,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":14,"column":1,"nodeType":"129","messageId":"130","endLine":14,"endColumn":55},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'daySid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'sleep' is defined but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [params.id, user.days]",{"range":"136","text":"137"},[1214,1225],"[params.id, user.days]"]