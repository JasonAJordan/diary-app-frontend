[{"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js":"1","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js":"2","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js":"3","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js":"4","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js":"5","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js":"6","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js":"7","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js":"8","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js":"9","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js":"10","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js":"11","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js":"12","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js":"13","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js":"14","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js":"15","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js":"16","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js":"17","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js":"18"},{"size":541,"mtime":1612363761833,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612300184997,"results":"21","hashOfConfig":"20"},{"size":1341,"mtime":1612540844854,"results":"22","hashOfConfig":"20"},{"size":2897,"mtime":1612577457401,"results":"23","hashOfConfig":"20"},{"size":8247,"mtime":1612584164975,"results":"24","hashOfConfig":"20"},{"size":734,"mtime":1612583770125,"results":"25","hashOfConfig":"20"},{"size":1024,"mtime":1612386478562,"results":"26","hashOfConfig":"20"},{"size":1592,"mtime":1612574091793,"results":"27","hashOfConfig":"20"},{"size":1646,"mtime":1612407932798,"results":"28","hashOfConfig":"20"},{"size":1596,"mtime":1612583198866,"results":"29","hashOfConfig":"20"},{"size":1126,"mtime":1612407853439,"results":"30","hashOfConfig":"20"},{"size":1325,"mtime":1612407704453,"results":"31","hashOfConfig":"20"},{"size":3318,"mtime":1612456591036,"results":"32","hashOfConfig":"20"},{"size":11428,"mtime":1612566330742,"results":"33","hashOfConfig":"20"},{"size":413,"mtime":1612467783688,"results":"34","hashOfConfig":"20"},{"size":574,"mtime":1612489458619,"results":"35","hashOfConfig":"20"},{"size":1012,"mtime":1612564364649,"results":"36","hashOfConfig":"20"},{"size":371,"mtime":1612553192585,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pp5roh",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/index.js",[],["81","82"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/reportWebVitals.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/App.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Calendar.js",["83","84"],"//import { useState, useEffect }  from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CalendarMaker from \"./CalendarRenders/CalendarMaker\"\nimport StickerApplyBox from \"./CalendarRenders/StickerApplyBox\"\n\nimport '../App.css'\nimport { useState } from \"react\";\n\n\nfunction Calendar({days, month, setMonth, user}){\n\n    const [stickerMode, setStickerMode] = useState(false)\n    const [stickerSelected, setStickerSelected] = useState(null)\n    //console.log(user.days , \"userdays\")\n    //console.log(stickerSelected)\n\n    const sliceMonthStart=[0,31,59,90,120,151,181,212,243,273,304,334]\n    const sliceMonthEnd =[31,59,90,120,151,181,212,243,273,304,334,365]\n\n    //const [days, setDays] = useState([user.days])\n\n    const daysOrdered = days.sort((day1, day2) => {\n        return day1.date.localeCompare(day2.date)\n    })\n    \n    const daysSliced = daysOrdered.slice(sliceMonthStart[month], sliceMonthEnd[month])\n\n    //Moved to CalendarMaker.js! Needed to more dynamic\n    // const daysMapped = daysSliced.map((day) => {\n    //     return (\n    //         <Link to={`days/${day.id}`} key={day.id}>\n    //             <div > \n    //                 <h4>{day.date.slice(0,5)}</h4>\n    //             </div>\n    //         </Link>\n    //     )\n    // })\n\n    // const daysMappedStickerMode = daysSliced.map((day) => {\n    //     return (\n    //             <div key={day.id}> \n    //                 <h4>{day.date.slice(0,5)}</h4>\n    //             </div>\n    //     )\n    // })\n\n    function handleNewDaySticker(newDaySticker){\n        //console.log.apply(newDaySticker)\n        //console.log(\"asdfasdf\")\n    }\n\n    const months =[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\", \n    ]\n\n    //console.log(month)\n\n    function handleNextMonth(){\n        if(month === 11){\n            setMonth(0)\n        } else{\n        setMonth(month+1)\n        }\n    }\n    function handelPrevMonth(){\n        if (month === 0){\n            setMonth(11)\n        } else {\n        setMonth(month-1)\n        }\n    }\n\n    return(\n        <div className=\"Wholecalendar\">\n            <h2>Calendar Here!</h2>\n\n            <button onClick={handelPrevMonth}>  Prev </button>\n            <h3>{months[month]}</h3>\n            <button onClick={handleNextMonth}> Next </button>\n\n            <CalendarMaker daysSliced={daysSliced} \n            month={month} stickerMode={stickerMode}\n            stickerSelected={stickerSelected}\n            handleNewDaySticker={handleNewDaySticker}\n            />\n\n            <StickerApplyBox user={user} \n            stickerMode ={stickerMode} \n            setStickerMode={setStickerMode}\n            setStickerSelected={setStickerSelected}\n            />\n        </div>\n    )\n}\n\nexport default Calendar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/Day.js",["85","86","87","88","89","90"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/DayStickerRender.js",["91"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/PostRender.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/EditPostForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/dayRenders/NewDayStickerForm.js",["92"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/User.js",["93","94"],"import { useState, useEffect }  from \"react\";\nimport EditBioForm from \"./userRenders/EditBioForm\"\n\nfunction User({user, setUser}){\n\n    const [editmode, setEditmode] = useState(false)\n\n    const mappedUserStickers = user.stickers.map((sticker) => {\n        return (\n                <div>\n                    <h4>{sticker.name}</h4>\n                    <img src={sticker.image}/>\n                </div>\n        )\n    })\n\n    function handleEditClick(){\n        setEditmode(!editmode)\n    }\n    function handleUserEdit(updatedUser){\n        //console.log(\"asdf\")\n        setUser(updatedUser)\n\n    }\n\n    return(\n        <div>\n            <h2>This is the User Page! </h2>\n\n            <h3>Username: {user.username}</h3>\n            <h3>Name: {user.name}</h3>\n            <h3>Bio: {user.bio}</h3>\n            <h3>Your Stickers:</h3>\n            {mappedUserStickers}\n\n            {(editmode === true)\n                ? <EditBioForm user={user} handleUserEdit={handleUserEdit} setEditmode={setEditmode}/>\n                :<button onClick={handleEditClick}>Edit Bio</button>\n            }\n\n        </div>\n    )\n}\n\nexport default User","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/userRenders/EditBioForm.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/SignUp.js",["95"],"import { useState }  from \"react\";\n\nfunction SignUp (){\n\n    //let date = new Date(Date.parse('2020/01/01'))\n    // let date = new Date(\"2020-01-02\")\n\n    // console.log(date)\n    // date.setDate(date.getDate + 1)\n    // console.log(date)\n    // // console.log(date)\n\n    // let today = new Date(Date.parse('2021/01/01'));\n    // let dd = String(today.getDate()).padStart(2, '0');\n    // let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    // let yyyy = today.getFullYear();\n    // let formated = mm + '/' + dd + '/' + yyyy;\n    //console.log(formated)\n    function sleep(milliseconds) {\n        const date = Date.now();\n        let currentDate = null;\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < milliseconds);\n      }\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        bio: \"\",\n    })\n\n    function handleFormChange(event){\n        // console.log()\n        setFormData({...formData,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        console.log(formData)\n\n        fetch(`http://localhost:3000/users`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n            })\n        .then(r => r.json())\n        .then(newUser => handleNewPost(newUser))\n    }\n\n\n    function handleNewPost(newUser){\n\n        let today = new Date(Date.parse('2021/01/01'));\n\n        for (let i=0; i < 365; i++) {\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); \n            let yyyy = today.getFullYear();\n            let formatedDate = mm + '/' + dd + '/' + yyyy;\n            today.setHours(today.getHours() + 24)\n\n            let data = {\n                user_id: newUser.id,\n                date: formatedDate\n            }\n            fetch(`http://localhost:3000/days`,{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n                })\n            .then(r => r.json())\n            //then(newDays =>)\n\n            // sleep(1000)\n        }\n\n    }\n\n\n    return (\n        <div>\n            <h2>New User</h2>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"\n                value={formData.username}\n                onChange={handleFormChange}\n                />\n                <input type=\"text\" name=\"password\" placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleFormChange}\n                />\n                <input type=\"text\" name=\"name\" placeholder=\"Name\"\n                value={formData.name}\n                onChange={handleFormChange}\n                />\n                <input type=\"textarea\" name=\"bio\" placeholder=\"About Yourself!\"\n                value={formData.bio}\n                onChange={handleFormChange}\n                />\n                <button type=\"submit\">Make an Account </button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default SignUp ","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarMaker.js",["96","97"],"//import { useState, useEffect }  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Day from \"../Day\";\nimport NewDaySticker from \"../dayRenders/NewDayStickerForm\";\n//import CalendarDay from \"./CalendarDay\"\n\n\nfunction CalendarMaker({daysSliced, month, stickerMode, stickerSelected, handleNewDaySticker}){\n\n    //console.log(daysSliced)\n    const monthC = month % 12\n\n\n    function handleDayStickerClick(event) {\n        const dayId = event.target.getAttribute(\"data-value\")\n        console.log(event.target.getAttribute(\"data-value\"), \"dayID\")\n        console.log(stickerSelected, \"stickerID\")\n        \n        const data = {\n            day_id: dayId,\n            sticker_id: stickerSelected,\n        }\n\n        fetch(`http://localhost:3000/day_stickers`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n        .then(r => r.json())\n        .then(newDaySticker => handleNewDaySticker(newDaySticker))\n\n    }\n\n\n    //This is a helper function for daysMapped rendering, This deals with making each sticker show. \n    function postStickers(stickers){\n        const stickersMapped = stickers.map((sticker) => {\n            return <img src={sticker.image} alt={sticker.name} width=\"20\" height=\"20\" key={sticker.id}/>\n        })\n        return <div>{stickersMapped}</div>\n    }\n\n    const daysMapped = daysSliced.map((day) => {\n        //return <CalendarDay day={day} key={day.id}/>\n\n        //First Part of is for the normal calendar redirects, \n        //This makes diffrenet calendar day boxes based on the attributes in the \"day\" object\n        if (stickerMode === false) {  \n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                        <br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                    </div>\n                    </Link>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                    </Link>\n                )\n            } else {\n                return (\n                    <Link to={`days/${day.id}`} key={day.id}>\n                    <div className=\"calendarDay\">{day.date.slice(0,5)}</div>\n                    </Link>\n                )\n            }\n        } else {\n            if (day.posts[0] && day.stickers[0]) {\n                return (\n                    <div key={day.id} className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                        <br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else if (day.posts[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        Post Made!\n                    </div>\n                ) \n            } else if (day.stickers[0]){\n                return (\n                    <div key={day.id} className=\"calendarDay\">\n                        {day.date.slice(0,5)}<br/>\n                        {postStickers(day.stickers)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day.id} className=\"calendarDay\" onClick={handleDayStickerClick} data-value={day.id}>\n                        {day.date.slice(0,5)}\n                    </div>\n                )\n            }\n\n        }\n\n    })\n\n    function weekdayNames(){\n        return (\n            <div className=\"weekdays\">\n                <div className=\"calendarDayLabels\">Sun</div>\n                <div className=\"calendarDayLabels\">Mon</div>\n                <div className=\"calendarDayLabels\">Tue</div>\n                <div className=\"calendarDayLabels\">Wed</div>\n                <div className=\"calendarDayLabels\">Thu</div>\n                <div className=\"calendarDayLabels\">Fri</div>\n                <div className=\"calendarDayLabels\">Sat</div>\n            </div>\n        )\n    }\n\n    if (monthC === 0){\n    return (\n       \n        <div className=\"calendar\">\n\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n        </div>\n        \n    )} else if (monthC === 1){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 2){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 3){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC ===4){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 5){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 6){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 7){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 8){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    } else if (monthC === 9){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 10){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }else if (monthC === 11){\n        return(\n            <div className=\"calendar\">\n                {weekdayNames()}\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                <div className=\"calendarDay\"></div>\n                {daysMapped}\n                <div className=\"calendarDay\"></div>\n                <p>{monthC + 1}</p>\n            </div>\n        )\n    }\n        else {\n        return <div> loading not yet coded yet</div>\n    }\n\n    \n\n}\n\nexport default CalendarMaker","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/CalendarDay.js",["98","99","100"],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/navBar/NavBar.js",["101"],"import { useParams, Link } from \"react-router-dom\";\n\nfunction NavBar({user}){\n\n\n    if (user){\n        return (\n            <div>Nav Bar for user\n            <Link to={`/`}>Home</Link>\n            <Link to={`/`}>Calendar</Link>\n            <Link to={`/users/${user.id}`}>User</Link>\n        </div>    \n        )\n    } else {\n        return (\n            <div>NavBar for not Logined \n\n                <Link to={`/`}>Home</Link>\n                {}\n                {/* <Link to={`/users/${user.id}`}>User</Link> */}\n            </div>\n        )\n    }\n\n\n}\n\nexport default NavBar","/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/StickerApplyBox.js",[],"/Users/jasonjordan/Development/code/diary/diary-app-frontend/src/pages/CalendarRenders/UserStickers.js",["102"],"function UserStickers({sticker}){\n\n    return (\n        <div> \n            <h3>{sticker.name}</h3>\n            <input type=\"radio\" name=\"choice\" value={sticker.id}/>\n            <img src={sticker.image} alt={sticker.name} width=\"40\" height=\"40\" key={sticker.id}/>\n        </div>\n    )\n}\n\nexport default UserStickers\n\n{/* <input type=\"radio\" name=\"choice\" value=\"yes\"> */}",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":41,"column":7,"nodeType":"114","endLine":41,"endColumn":18,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":63,"column":33,"nodeType":"118","messageId":"119","endLine":63,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":84,"column":33,"nodeType":"118","messageId":"119","endLine":84,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":99,"column":33,"nodeType":"118","messageId":"119","endLine":99,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":117,"column":33,"nodeType":"118","messageId":"119","endLine":117,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":23,"column":13,"nodeType":"122","endLine":23,"endColumn":39},{"ruleId":"120","severity":1,"message":"121","line":38,"column":21,"nodeType":"122","endLine":38,"endColumn":47},{"ruleId":"107","severity":1,"message":"123","line":1,"column":20,"nodeType":"109","messageId":"110","endLine":1,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":12,"column":21,"nodeType":"122","endLine":12,"endColumn":47},{"ruleId":"107","severity":1,"message":"124","line":19,"column":14,"nodeType":"109","messageId":"110","endLine":19,"endColumn":19},{"ruleId":"107","severity":1,"message":"125","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":11},{"ruleId":"107","severity":1,"message":"126","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":21},{"ruleId":"107","severity":1,"message":"127","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":14,"column":1,"nodeType":"130","messageId":"131","endLine":14,"endColumn":55},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.days'. Either include it or remove the dependency array.","ArrayExpression",["134"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'sleep' is defined but never used.","'Day' is defined but never used.","'NewDaySticker' is defined but never used.","'CalendarMaker' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [params.id, user.days]",{"range":"137","text":"138"},[1320,1331],"[params.id, user.days]"]